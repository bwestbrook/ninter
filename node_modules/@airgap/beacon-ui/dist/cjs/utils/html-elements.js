"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.removeAllChildren = exports.sanitizeText = exports.createIconSVGExternal = exports.createSVGGElement = exports.createSVGPathElement = exports.createSVGElement = exports.createSanitizedElement = void 0;
var createSanitizedElement = function (type, classes, attributes, element) {
    var _a;
    var el = document.createElement(type);
    if (classes.length > 0) {
        // Filter empty classnames and add all classes to element
        (_a = el.classList).add.apply(_a, classes.filter(function (clazz) { return !!clazz; }).map(function (clazz) { return (0, exports.sanitizeText)(clazz); }));
    }
    // Add all attributes to element
    attributes.forEach(function (attribute) {
        el.setAttribute((0, exports.sanitizeText)(attribute[0]), (0, exports.sanitizeText)(attribute[1]));
    });
    if (typeof element === 'object' && Array.isArray(element)) {
        // If we get a list of elements, add all of them as children
        element
            .filter(function (childEl) { return !!childEl; })
            .forEach(function (childEl) {
            el.appendChild(childEl);
        });
    }
    else if (typeof element === 'string') {
        // Use `innerText` to assign text to prevent malicious code from being rendered
        el.innerText = element;
    }
    else {
        // NOOP
    }
    return el;
};
exports.createSanitizedElement = createSanitizedElement;
var createSVGElement = function (classes, attributes, element) {
    var _a;
    var el = document.createElementNS('http://www.w3.org/2000/svg', 'svg');
    if (classes.length > 0) {
        (_a = el.classList).add.apply(_a, classes.filter(function (clazz) { return !!clazz; }));
    }
    attributes.forEach(function (attribute) {
        el.setAttribute((0, exports.sanitizeText)(attribute[0]), (0, exports.sanitizeText)(attribute[1]));
    });
    if (typeof element === 'object' && Array.isArray(element)) {
        element
            .filter(function (childEl) { return !!childEl; })
            .forEach(function (childEl) {
            el.appendChild(childEl);
        });
    }
    else {
        // NOOP
    }
    return el;
};
exports.createSVGElement = createSVGElement;
var createSVGPathElement = function (attributes) {
    var el = document.createElementNS('http://www.w3.org/2000/svg', 'path');
    attributes.forEach(function (attribute) {
        el.setAttribute((0, exports.sanitizeText)(attribute[0]), (0, exports.sanitizeText)(attribute[1]));
    });
    return el;
};
exports.createSVGPathElement = createSVGPathElement;
var createSVGGElement = function (element) {
    var el = document.createElementNS('http://www.w3.org/2000/svg', 'g');
    element
        .filter(function (childEl) { return !!childEl; })
        .forEach(function (childEl) {
        el.appendChild(childEl);
    });
    return el;
};
exports.createSVGGElement = createSVGGElement;
var createIconSVGExternal = function () {
    return (0, exports.createSVGElement)(['svg-inline--fa', 'fa-external-link-alt', 'fa-w-16'], [
        ['aria-hidden', 'true'],
        ['focusable', 'false'],
        ['data-prefix', 'fas'],
        ['data-icon', 'external-link-alt'],
        ['role', 'img'],
        ['xmlns', 'http://www.w3.org/2000/svg'],
        ['viewBox', '0 0 512 512']
    ], [
        (0, exports.createSVGPathElement)([
            ['fill', 'currentColor'],
            [
                'd',
                'M432,320H400a16,16,0,0,0-16,16V448H64V128H208a16,16,0,0,0,16-16V80a16,16,0,0,0-16-16H48A48,48,0,0,0,0,112V464a48,48,0,0,0,48,48H400a48,48,0,0,0,48-48V336A16,16,0,0,0,432,320ZM488,0h-128c-21.37,0-32.05,25.91-17,41l35.73,35.73L135,320.37a24,24,0,0,0,0,34L157.67,377a24,24,0,0,0,34,0L435.28,133.32,471,169c15,15,41,4.5,41-17V24A24,24,0,0,0,488,0Z'
            ]
        ])
    ]);
};
exports.createIconSVGExternal = createIconSVGExternal;
var sanitizeText = function (text) {
    var div = document.createElement('div');
    div.innerText = text;
    return div.innerHTML;
};
exports.sanitizeText = sanitizeText;
var removeAllChildren = function (el) {
    el.innerHTML = '';
};
exports.removeAllChildren = removeAllChildren;
//# sourceMappingURL=html-elements.js.map