import { KeyPair } from 'libsodium-wrappers';
import { Storage, StorageKey, ExtendedP2PPairingResponse } from '@airgap/beacon-types';
import { P2PTransport } from '@airgap/beacon-transport-matrix';
/**
 * @internalapi
 *
 *
 */
export declare class DappP2PTransport extends P2PTransport<ExtendedP2PPairingResponse, StorageKey.TRANSPORT_P2P_PEERS_DAPP> {
    constructor(name: string, keyPair: KeyPair, storage: Storage, matrixNodes: string[], iconUrl?: string, appUrl?: string);
    startOpenChannelListener(): Promise<void>;
    listenForNewPeer(newPeerListener: (peer: ExtendedP2PPairingResponse) => void): Promise<void>;
    stopListeningForNewPeers(): Promise<void>;
}
