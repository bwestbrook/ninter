{"ast":null,"code":"import \"core-js/modules/es.array.includes.js\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport { StorageKey } from '@airgap/beacon-types';\nimport { StorageManager } from './StorageManager';\n/**\n * @internalapi\n *\n * The AppMetadataManager provides CRUD functionality for app-metadata entities and persists them to the provided storage.\n */\n\nexport class AppMetadataManager {\n  constructor(storage) {\n    this.storageManager = new StorageManager(storage, StorageKey.APP_METADATA_LIST);\n  }\n\n  getAppMetadataList() {\n    return __awaiter(this, void 0, void 0, function* () {\n      return this.storageManager.getAll();\n    });\n  }\n\n  getAppMetadata(senderId) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return this.storageManager.getOne(appMetadata => appMetadata.senderId === senderId);\n    });\n  }\n\n  addAppMetadata(appMetadata) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return this.storageManager.addOne(appMetadata, appMetadataElement => appMetadataElement.senderId === appMetadata.senderId);\n    });\n  }\n\n  removeAppMetadata(senderId) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return this.storageManager.remove(appMetadata => appMetadata.senderId === senderId);\n    });\n  }\n\n  removeAppMetadatas(senderIds) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return this.storageManager.remove(appMetadata => senderIds.includes(appMetadata.senderId));\n    });\n  }\n\n  removeAllAppMetadata() {\n    return __awaiter(this, void 0, void 0, function* () {\n      return this.storageManager.removeAll();\n    });\n  }\n\n}","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAAkBA,UAAlB,QAAiD,sBAAjD;AACA,SAASC,cAAT,QAA+B,kBAA/B;AAEA;;;;;;AAKA,OAAM,MAAOC,kBAAP,CAAyB;EAG7BC,YAAYC,OAAZ,EAA4B;IAC1B,KAAKC,cAAL,GAAsB,IAAIJ,cAAJ,CAAmBG,OAAnB,EAA4BJ,UAAU,CAACM,iBAAvC,CAAtB;EACD;;EAEYC,kBAAkB;;MAC7B,OAAO,KAAKF,cAAL,CAAoBG,MAApB,EAAP;IACD;EAAA;;EAEYC,cAAc,CAACC,QAAD,EAAiB;;MAC1C,OAAO,KAAKL,cAAL,CAAoBM,MAApB,CACJC,WAAD,IAA8BA,WAAW,CAACF,QAAZ,KAAyBA,QADlD,CAAP;IAGD;EAAA;;EAEYG,cAAc,CAACD,WAAD,EAAyB;;MAClD,OAAO,KAAKP,cAAL,CAAoBS,MAApB,CACLF,WADK,EAEJG,kBAAD,IAAqCA,kBAAkB,CAACL,QAAnB,KAAgCE,WAAW,CAACF,QAF5E,CAAP;IAID;EAAA;;EAEYM,iBAAiB,CAACN,QAAD,EAAiB;;MAC7C,OAAO,KAAKL,cAAL,CAAoBY,MAApB,CACJL,WAAD,IAA8BA,WAAW,CAACF,QAAZ,KAAyBA,QADlD,CAAP;IAGD;EAAA;;EAEYQ,kBAAkB,CAACC,SAAD,EAAoB;;MACjD,OAAO,KAAKd,cAAL,CAAoBY,MAApB,CAA4BL,WAAD,IAChCO,SAAS,CAACC,QAAV,CAAmBR,WAAW,CAACF,QAA/B,CADK,CAAP;IAGD;EAAA;;EAEYW,oBAAoB;;MAC/B,OAAO,KAAKhB,cAAL,CAAoBiB,SAApB,EAAP;IACD;EAAA;;AAtC4B","names":["StorageKey","StorageManager","AppMetadataManager","constructor","storage","storageManager","APP_METADATA_LIST","getAppMetadataList","getAll","getAppMetadata","senderId","getOne","appMetadata","addAppMetadata","addOne","appMetadataElement","removeAppMetadata","remove","removeAppMetadatas","senderIds","includes","removeAllAppMetadata","removeAll"],"sourceRoot":"","sources":["../../../src/managers/AppMetadataManager.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}