{"ast":null,"code":"export const createSanitizedElement = (type, classes, attributes, element) => {\n  const el = document.createElement(type);\n\n  if (classes.length > 0) {\n    // Filter empty classnames and add all classes to element\n    el.classList.add(...classes.filter(clazz => !!clazz).map(clazz => sanitizeText(clazz)));\n  } // Add all attributes to element\n\n\n  attributes.forEach(attribute => {\n    el.setAttribute(sanitizeText(attribute[0]), sanitizeText(attribute[1]));\n  });\n\n  if (typeof element === 'object' && Array.isArray(element)) {\n    // If we get a list of elements, add all of them as children\n    element.filter(childEl => !!childEl).forEach(childEl => {\n      el.appendChild(childEl);\n    });\n  } else if (typeof element === 'string') {\n    // Use `innerText` to assign text to prevent malicious code from being rendered\n    el.innerText = element;\n  } else {// NOOP\n  }\n\n  return el;\n};\nexport const createSVGElement = (classes, attributes, element) => {\n  const el = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n\n  if (classes.length > 0) {\n    el.classList.add(...classes.filter(clazz => !!clazz));\n  }\n\n  attributes.forEach(attribute => {\n    el.setAttribute(sanitizeText(attribute[0]), sanitizeText(attribute[1]));\n  });\n\n  if (typeof element === 'object' && Array.isArray(element)) {\n    element.filter(childEl => !!childEl).forEach(childEl => {\n      el.appendChild(childEl);\n    });\n  } else {// NOOP\n  }\n\n  return el;\n};\nexport const createSVGPathElement = attributes => {\n  const el = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n  attributes.forEach(attribute => {\n    el.setAttribute(sanitizeText(attribute[0]), sanitizeText(attribute[1]));\n  });\n  return el;\n};\nexport const createSVGGElement = element => {\n  const el = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n  element.filter(childEl => !!childEl).forEach(childEl => {\n    el.appendChild(childEl);\n  });\n  return el;\n};\nexport const createIconSVGExternal = () => {\n  return createSVGElement(['svg-inline--fa', 'fa-external-link-alt', 'fa-w-16'], [['aria-hidden', 'true'], ['focusable', 'false'], ['data-prefix', 'fas'], ['data-icon', 'external-link-alt'], ['role', 'img'], ['xmlns', 'http://www.w3.org/2000/svg'], ['viewBox', '0 0 512 512']], [createSVGPathElement([['fill', 'currentColor'], ['d', 'M432,320H400a16,16,0,0,0-16,16V448H64V128H208a16,16,0,0,0,16-16V80a16,16,0,0,0-16-16H48A48,48,0,0,0,0,112V464a48,48,0,0,0,48,48H400a48,48,0,0,0,48-48V336A16,16,0,0,0,432,320ZM488,0h-128c-21.37,0-32.05,25.91-17,41l35.73,35.73L135,320.37a24,24,0,0,0,0,34L157.67,377a24,24,0,0,0,34,0L435.28,133.32,471,169c15,15,41,4.5,41-17V24A24,24,0,0,0,488,0Z']])]);\n};\nexport const sanitizeText = text => {\n  const div = document.createElement('div');\n  div.innerText = text;\n  return div.innerHTML;\n};\nexport const removeAllChildren = el => {\n  el.innerHTML = '';\n};","map":{"version":3,"mappings":"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","names":["createSanitizedElement","type","classes","attributes","element","el","document","createElement","length","classList","add","filter","clazz","map","sanitizeText","forEach","attribute","setAttribute","Array","isArray","childEl","appendChild","innerText","createSVGElement","createElementNS","createSVGPathElement","createSVGGElement","createIconSVGExternal","text","div","innerHTML","removeAllChildren"],"sourceRoot":"","sources":["../../../src/utils/html-elements.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}