{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_Subscriber,_util_EmptyError PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nimport { EmptyError } from '../util/EmptyError';\nexport function single(predicate) {\n  return function (source) {\n    return source.lift(new SingleOperator(predicate, source));\n  };\n}\n\nvar SingleOperator = /*@__PURE__*/function () {\n  function SingleOperator(predicate, source) {\n    this.predicate = predicate;\n    this.source = source;\n  }\n\n  SingleOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new SingleSubscriber(subscriber, this.predicate, this.source));\n  };\n\n  return SingleOperator;\n}();\n\nvar SingleSubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(SingleSubscriber, _super);\n\n  function SingleSubscriber(destination, predicate, source) {\n    var _this = _super.call(this, destination) || this;\n\n    _this.predicate = predicate;\n    _this.source = source;\n    _this.seenValue = false;\n    _this.index = 0;\n    return _this;\n  }\n\n  SingleSubscriber.prototype.applySingleValue = function (value) {\n    if (this.seenValue) {\n      this.destination.error('Sequence contains more than one element');\n    } else {\n      this.seenValue = true;\n      this.singleValue = value;\n    }\n  };\n\n  SingleSubscriber.prototype._next = function (value) {\n    var index = this.index++;\n\n    if (this.predicate) {\n      this.tryNext(value, index);\n    } else {\n      this.applySingleValue(value);\n    }\n  };\n\n  SingleSubscriber.prototype.tryNext = function (value, index) {\n    try {\n      if (this.predicate(value, index, this.source)) {\n        this.applySingleValue(value);\n      }\n    } catch (err) {\n      this.destination.error(err);\n    }\n  };\n\n  SingleSubscriber.prototype._complete = function () {\n    var destination = this.destination;\n\n    if (this.index > 0) {\n      destination.next(this.seenValue ? this.singleValue : undefined);\n      destination.complete();\n    } else {\n      destination.error(new EmptyError());\n    }\n  };\n\n  return SingleSubscriber;\n}(Subscriber);","map":{"version":3,"mappings":";AAEA,OAAO,KAAEA,OAAT,MAAqB,OAArB;AACA,SAASC,UAAT,QAA2B,eAA3B;AAkDA,SAAMC,UAAN,QAA0B,oBAA1B;OACE,SAAOC,MAAP,CAAQC,SAAR,EAAkC;EACnC;IAAA;EAAA;AAED;;IACEC,8BAAoB,YACsB;WADtBA,0BAAuEC;IACvE;IACnB;EAED;;gBACS,WAAOC,OAAc,sBAAiBD,MAAjB,EAA6B;IAC1D;EACH;;EARA,OAQCD,cARD;AAeA,CAdsB;;IAcYG,0CAAaC,MAAb,EAAa;EAK7CT,oCAAYS,MAAZ;;WAAAD,iBAGEE,aAAMN,WAAYE,QACnB;IAHmB,8BAAuEI,WAAvE,KAAuE,IAAvE;;IACAC;IANZA,eAASL,MAAT;IAEAK,kBAAkB,KAAlB;;IAMP;EAEO;;kBACG,WAAWC;QAClB,KAAKC,WAAW;MACjB;WACC;MACA,KAAKA,SAAL,GAAgB,IAAhB;MACD;IACF;EAES;;kBACM,WAAUC,QAAG;IAE3B,IAAIC,KAAK,eAAT;;QACE,KAAKX,WAAQ;MACd;WACC;MACD;IACF;EAEO;;kBACF;QACF;UACE,KAAKA,SAAL,CAAKY,KAAL,EAAsBD,KAAtB,EAA6B,WAA7B,GAA6B;QAC9B;MACF;IAAC,SACAE,KAAK;MACN;IACF;EAES;;kBACF,WAAmBC,YAAY;IAErC,IAAIR,WAAU,GAAI,KAAEA,WAApB;;QACE,aAAY,GAAI;MAChBA,WAAW,CAACS,IAAZ,CAAY,KAAUN,SAAV,GAAW,gBAAX,GAAWO,SAAvB;MACDV;WACC;MACDA;IACF;EACH;;EAlDkC;CAAA","names":["tslib_1","Subscriber","EmptyError","single","predicate","SingleOperator","source","call","SingleSubscriber","_super","destination","_this","applySingleValue","seenValue","_next","index","value","err","_complete","next","undefined"],"sources":["../../../src/internal/operators/single.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}