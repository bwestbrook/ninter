{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_Subject,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subject } from '../Subject';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport function windowWhen(closingSelector) {\n  return function windowWhenOperatorFunction(source) {\n    return source.lift(new WindowOperator(closingSelector));\n  };\n}\n\nvar WindowOperator = /*@__PURE__*/function () {\n  function WindowOperator(closingSelector) {\n    this.closingSelector = closingSelector;\n  }\n\n  WindowOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new WindowSubscriber(subscriber, this.closingSelector));\n  };\n\n  return WindowOperator;\n}();\n\nvar WindowSubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(WindowSubscriber, _super);\n\n  function WindowSubscriber(destination, closingSelector) {\n    var _this = _super.call(this, destination) || this;\n\n    _this.destination = destination;\n    _this.closingSelector = closingSelector;\n\n    _this.openWindow();\n\n    return _this;\n  }\n\n  WindowSubscriber.prototype.notifyNext = function (_outerValue, _innerValue, _outerIndex, _innerIndex, innerSub) {\n    this.openWindow(innerSub);\n  };\n\n  WindowSubscriber.prototype.notifyError = function (error) {\n    this._error(error);\n  };\n\n  WindowSubscriber.prototype.notifyComplete = function (innerSub) {\n    this.openWindow(innerSub);\n  };\n\n  WindowSubscriber.prototype._next = function (value) {\n    this.window.next(value);\n  };\n\n  WindowSubscriber.prototype._error = function (err) {\n    this.window.error(err);\n    this.destination.error(err);\n    this.unsubscribeClosingNotification();\n  };\n\n  WindowSubscriber.prototype._complete = function () {\n    this.window.complete();\n    this.destination.complete();\n    this.unsubscribeClosingNotification();\n  };\n\n  WindowSubscriber.prototype.unsubscribeClosingNotification = function () {\n    if (this.closingNotification) {\n      this.closingNotification.unsubscribe();\n    }\n  };\n\n  WindowSubscriber.prototype.openWindow = function (innerSub) {\n    if (innerSub === void 0) {\n      innerSub = null;\n    }\n\n    if (innerSub) {\n      this.remove(innerSub);\n      innerSub.unsubscribe();\n    }\n\n    var prevWindow = this.window;\n\n    if (prevWindow) {\n      prevWindow.complete();\n    }\n\n    var window = this.window = new Subject();\n    this.destination.next(window);\n    var closingNotifier;\n\n    try {\n      var closingSelector = this.closingSelector;\n      closingNotifier = closingSelector();\n    } catch (e) {\n      this.destination.error(e);\n      this.window.error(e);\n      return;\n    }\n\n    this.add(this.closingNotification = subscribeToResult(this, closingNotifier));\n  };\n\n  return WindowSubscriber;\n}(OuterSubscriber);","map":{"version":3,"mappings":";AAGA,OAAO,KAAEA,OAAT,MAAwB,OAAxB;AAEA,SAASC,OAAT,QAAwB,YAAxB;AAEA,SAASC,eAAT,QAA4B,oBAA5B;AAgDA,SAAMC,iBAAN,QAA8B,2BAA9B;OACE,SAAOC,UAAP,CAAgBC,eAAhB,EAAgB;SACd,SAAOC,0BAAP,CAAyCC,MAAzC,EAAyC;IACzC;EACH;AAED;;IACEC,8BAAoB,YAAsC;WAAtCA,eAAeH,iBAAf;IACnB;EAED;;gBACS,WAAOI,OAAc,sBAAiBF,MAAjB,EAA6B;IAC1D;EACH;;EAPA,OAOCC,cAPD;AAcA,CAbsB;;IAaYE,0CAAuBC,MAAvB,EAAuB;EAIvDX,oCAAsBW,MAAtB;;WAAAD,iBAEEE,aAAMP,iBAEP;IAJqB,kBAAW,KAAX,uBAAsC,IAAtC;;IACFQ;IAElBA,KAAI,CAACR,eAAL,GAAkBA,eAAlB;;;;IACD;EAED;;kBAGO,WAAWS,aAAU;IAC3B;EAED;;kBACc,WAAOC;IACpB;EAED;;kBACO,WAAWC,iBAAU;IAC3B;EAES;;kBACK,WAAWC,QAAC;IAC1B;EAES;;kBACK,WAAWC;IACxB,KAAKC,MAAL,CAAKC,KAAL,CAAiBC,GAAjB;IACA,KAAKT,WAAL,CAAKQ,KAAL,CAAKC,GAAL;IACD;EAES;;kBACK,WAAWC;IACxB,KAAKH,MAAL,CAAKI,QAAL;IACA,KAAKX,WAAL,CAAKW,QAAL;IACD;EAEO;;kBACG,4CAAqB;QAC5B,KAAKC,qBAAoB;MAC1B;IACF;EAEO;;kBAAW,kCAA+CC,QAA/C,EAA+C;IAChE,IAAIA,QAAQ,KAAE,MAAd,EAAc;MACZA,QAAK,GAAM,IAAX;;;QAEDA;MAEK,YAAUA,QAAV;MACFA;;;QAEHC;;IAED,IAAMA,UAAN,EAAe;MACXA,UAAC,SAAD;IAEJ;;IACA,IAAIP,oCAAJ;SACUP;QACRe;;QACD;MAAC,IAAQtB,eAAE,uBAAV;MACAsB,eAAK,GAAYtB,eAAS,EAA1B;aAEAuB;MACD;MACG,KAAKT,MAAL,CAAUC,KAAV,CAAUQ,CAAV;MACL;IACH;;IAvEkC,SAAe,KAuEhDJ,mBAvEgD,GAuEhDrB,wCAvEiC;;;;CAAA","names":["tslib_1","Subject","OuterSubscriber","subscribeToResult","windowWhen","closingSelector","windowWhenOperatorFunction","source","WindowOperator","call","WindowSubscriber","_super","destination","_this","notifyNext","notifyError","notifyComplete","_next","_error","window","error","err","_complete","complete","closingNotification","innerSub","prevWindow","closingNotifier","e"],"sources":["../../../src/internal/operators/windowWhen.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}