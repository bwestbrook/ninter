{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport { DAppClient, PermissionScope } from '@airgap/beacon-dapp';\nimport { createTransferOperation, createOriginationOperation, createSetDelegateOperation } from '@taquito/taquito';\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\n\nfunction __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n} // IMPORTANT: THIS FILE IS AUTO GENERATED! DO NOT MANUALLY EDIT OR CHECKIN!\n\n\nconst VERSION = {\n  \"commitHash\": \"cbdd0af87e400489076259d065e2d328feb8e1b4\",\n  \"version\": \"12.1.0\"\n};\n/**\r\n * @packageDocumentation\r\n * @module @taquito/beacon-wallet\r\n */\n\n/**\r\n *  @category Error\r\n *  @description Error that indicates the Beacon wallet not being initialized\r\n */\n\nclass BeaconWalletNotInitialized extends Error {\n  constructor() {\n    super('You need to initialize BeaconWallet by calling beaconWallet.requestPermissions first');\n    this.name = 'BeaconWalletNotInitialized';\n  }\n\n}\n/**\r\n *  @category Error\r\n *  @description Error that indicates missing required persmission scopes\r\n */\n\n\nclass MissingRequiredScopes extends Error {\n  constructor(requiredScopes) {\n    super(`Required permissions scopes were not granted: ${requiredScopes.join(',')}`);\n    this.requiredScopes = requiredScopes;\n    this.name = 'MissingRequiredScopes';\n  }\n\n}\n\nclass BeaconWallet {\n  constructor(options) {\n    this.client = new DAppClient(options);\n  }\n\n  validateRequiredScopesOrFail(permissionScopes, requiredScopes) {\n    const mandatoryScope = new Set(requiredScopes);\n\n    for (const scope of permissionScopes) {\n      if (mandatoryScope.has(scope)) {\n        mandatoryScope.delete(scope);\n      }\n    }\n\n    if (mandatoryScope.size > 0) {\n      throw new MissingRequiredScopes(Array.from(mandatoryScope));\n    }\n  }\n\n  requestPermissions(request) {\n    return __awaiter(this, void 0, void 0, function* () {\n      yield this.client.requestPermissions(request);\n    });\n  }\n\n  getPKH() {\n    return __awaiter(this, void 0, void 0, function* () {\n      const account = yield this.client.getActiveAccount();\n\n      if (!account) {\n        throw new BeaconWalletNotInitialized();\n      }\n\n      return account.address;\n    });\n  }\n\n  mapTransferParamsToWalletParams(params) {\n    return __awaiter(this, void 0, void 0, function* () {\n      let walletParams;\n      yield this.client.showPrepare();\n\n      try {\n        walletParams = yield params();\n      } catch (err) {\n        yield this.client.hideUI();\n        throw err;\n      }\n\n      return this.removeDefaultParams(walletParams, yield createTransferOperation(this.formatParameters(walletParams)));\n    });\n  }\n\n  mapOriginateParamsToWalletParams(params) {\n    return __awaiter(this, void 0, void 0, function* () {\n      let walletParams;\n      yield this.client.showPrepare();\n\n      try {\n        walletParams = yield params();\n      } catch (err) {\n        yield this.client.hideUI();\n        throw err;\n      }\n\n      return this.removeDefaultParams(walletParams, yield createOriginationOperation(this.formatParameters(walletParams)));\n    });\n  }\n\n  mapDelegateParamsToWalletParams(params) {\n    return __awaiter(this, void 0, void 0, function* () {\n      let walletParams;\n      yield this.client.showPrepare();\n\n      try {\n        walletParams = yield params();\n      } catch (err) {\n        yield this.client.hideUI();\n        throw err;\n      }\n\n      return this.removeDefaultParams(walletParams, yield createSetDelegateOperation(this.formatParameters(walletParams)));\n    });\n  }\n\n  formatParameters(params) {\n    if (params.fee) {\n      params.fee = params.fee.toString();\n    }\n\n    if (params.storageLimit) {\n      params.storageLimit = params.storageLimit.toString();\n    }\n\n    if (params.gasLimit) {\n      params.gasLimit = params.gasLimit.toString();\n    }\n\n    return params;\n  }\n\n  removeDefaultParams(params, operatedParams) {\n    // If fee, storageLimit or gasLimit is undefined by user\n    // in case of beacon wallet, dont override it by\n    // defaults.\n    if (!params.fee) {\n      delete operatedParams.fee;\n    }\n\n    if (!params.storageLimit) {\n      delete operatedParams.storage_limit;\n    }\n\n    if (!params.gasLimit) {\n      delete operatedParams.gas_limit;\n    }\n\n    return operatedParams;\n  }\n\n  sendOperations(params) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const account = yield this.client.getActiveAccount();\n\n      if (!account) {\n        throw new BeaconWalletNotInitialized();\n      }\n\n      const permissions = account.scopes;\n      this.validateRequiredScopesOrFail(permissions, [PermissionScope.OPERATION_REQUEST]);\n      const {\n        transactionHash\n      } = yield this.client.requestOperation({\n        operationDetails: params\n      });\n      return transactionHash;\n    });\n  }\n  /**\r\n   *\r\n   * @description Removes all beacon values from the storage. After using this method, this instance is no longer usable.\r\n   * You will have to instanciate a new BeaconWallet.\r\n   */\n\n\n  disconnect() {\n    return __awaiter(this, void 0, void 0, function* () {\n      yield this.client.destroy();\n    });\n  }\n  /**\r\n   *\r\n   * @description This method removes the active account from local storage by setting it to undefined.\r\n   */\n\n\n  clearActiveAccount() {\n    return __awaiter(this, void 0, void 0, function* () {\n      yield this.client.setActiveAccount();\n    });\n  }\n\n}\n\nexport { BeaconWallet, BeaconWalletNotInitialized, MissingRequiredScopes, VERSION };","map":{"version":3,"mappings":"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","names":["VERSION","BeaconWalletNotInitialized","Error","constructor","MissingRequiredScopes","requiredScopes","join","BeaconWallet","options","client","DAppClient","validateRequiredScopesOrFail","permissionScopes","mandatoryScope","Set","scope","has","delete","size","Array","from","requestPermissions","request","getPKH","account","getActiveAccount","address","mapTransferParamsToWalletParams","params","walletParams","showPrepare","err","hideUI","removeDefaultParams","createTransferOperation","formatParameters","mapOriginateParamsToWalletParams","createOriginationOperation","mapDelegateParamsToWalletParams","createSetDelegateOperation","fee","toString","storageLimit","gasLimit","operatedParams","storage_limit","gas_limit","sendOperations","permissions","scopes","PermissionScope","OPERATION_REQUEST","transactionHash","requestOperation","operationDetails","disconnect","destroy","clearActiveAccount","setActiveAccount"],"sources":["../src/version.ts","../src/taquito-beacon-wallet.ts"],"sourcesContent":["\n// IMPORTANT: THIS FILE IS AUTO GENERATED! DO NOT MANUALLY EDIT OR CHECKIN!\nexport const VERSION = {\n    \"commitHash\": \"cbdd0af87e400489076259d065e2d328feb8e1b4\",\n    \"version\": \"12.1.0\"\n};\n","/**\n * @packageDocumentation\n * @module @taquito/beacon-wallet\n */\n\nimport {\n  DAppClient,\n  DAppClientOptions,\n  RequestPermissionInput,\n  PermissionScope,\n} from '@airgap/beacon-dapp';\n\nimport {\n  createOriginationOperation,\n  createSetDelegateOperation,\n  createTransferOperation,\n  WalletDelegateParams,\n  WalletOriginateParams,\n  WalletProvider,\n  WalletTransferParams,\n} from '@taquito/taquito';\n\nexport { VERSION } from './version';\n\n/**\n *  @category Error\n *  @description Error that indicates the Beacon wallet not being initialized\n */\nexport class BeaconWalletNotInitialized extends Error {\n  name = 'BeaconWalletNotInitialized';\n\n  constructor() {\n    super('You need to initialize BeaconWallet by calling beaconWallet.requestPermissions first');\n  }\n}\n\n/**\n *  @category Error\n *  @description Error that indicates missing required persmission scopes\n */\nexport class MissingRequiredScopes extends Error {\n  name = 'MissingRequiredScopes';\n\n  constructor(public requiredScopes: PermissionScope[]) {\n    super(`Required permissions scopes were not granted: ${requiredScopes.join(',')}`);\n  }\n}\n\nexport class BeaconWallet implements WalletProvider {\n  public client: DAppClient;\n\n  constructor(options: DAppClientOptions) {\n    this.client = new DAppClient(options);\n  }\n\n  private validateRequiredScopesOrFail(\n    permissionScopes: PermissionScope[],\n    requiredScopes: PermissionScope[]\n  ) {\n    const mandatoryScope = new Set(requiredScopes);\n\n    for (const scope of permissionScopes) {\n      if (mandatoryScope.has(scope)) {\n        mandatoryScope.delete(scope);\n      }\n    }\n\n    if (mandatoryScope.size > 0) {\n      throw new MissingRequiredScopes(Array.from(mandatoryScope));\n    }\n  }\n\n  async requestPermissions(request?: RequestPermissionInput) {\n    await this.client.requestPermissions(request);\n  }\n\n  async getPKH() {\n    const account = await this.client.getActiveAccount();\n    if (!account) {\n      throw new BeaconWalletNotInitialized();\n    }\n    return account.address;\n  }\n\n  async mapTransferParamsToWalletParams(params: () => Promise<WalletTransferParams>) {\n    let walletParams: WalletTransferParams;\n    await this.client.showPrepare();\n    try {\n      walletParams = await params();\n    } catch (err) {\n      await this.client.hideUI();\n      throw err;\n    }\n    return this.removeDefaultParams(\n      walletParams,\n      await createTransferOperation(this.formatParameters(walletParams))\n    );\n  }\n\n  async mapOriginateParamsToWalletParams(params: () => Promise<WalletOriginateParams>) {\n    let walletParams: WalletOriginateParams;\n    await this.client.showPrepare();\n    try {\n      walletParams = await params();\n    } catch (err) {\n      await this.client.hideUI();\n      throw err;\n    }\n    return this.removeDefaultParams(\n      walletParams,\n      await createOriginationOperation(this.formatParameters(walletParams))\n    );\n  }\n\n  async mapDelegateParamsToWalletParams(params: () => Promise<WalletDelegateParams>) {\n    let walletParams: WalletDelegateParams;\n    await this.client.showPrepare();\n    try {\n      walletParams = await params();\n    } catch (err) {\n      await this.client.hideUI();\n      throw err;\n    }\n    return this.removeDefaultParams(\n      walletParams,\n      await createSetDelegateOperation(this.formatParameters(walletParams))\n    );\n  }\n\n  formatParameters(params: any) {\n    if (params.fee) {\n      params.fee = params.fee.toString();\n    }\n    if (params.storageLimit) {\n      params.storageLimit = params.storageLimit.toString();\n    }\n    if (params.gasLimit) {\n      params.gasLimit = params.gasLimit.toString();\n    }\n    return params;\n  }\n\n  removeDefaultParams(\n    params: WalletTransferParams | WalletOriginateParams | WalletDelegateParams,\n    operatedParams: any\n  ) {\n    // If fee, storageLimit or gasLimit is undefined by user\n    // in case of beacon wallet, dont override it by\n    // defaults.\n    if (!params.fee) {\n      delete operatedParams.fee;\n    }\n    if (!params.storageLimit) {\n      delete operatedParams.storage_limit;\n    }\n    if (!params.gasLimit) {\n      delete operatedParams.gas_limit;\n    }\n    return operatedParams;\n  }\n\n  async sendOperations(params: any[]) {\n    const account = await this.client.getActiveAccount();\n    if (!account) {\n      throw new BeaconWalletNotInitialized();\n    }\n    const permissions = account.scopes;\n    this.validateRequiredScopesOrFail(permissions, [PermissionScope.OPERATION_REQUEST]);\n\n    const { transactionHash } = await this.client.requestOperation({ operationDetails: params });\n    return transactionHash;\n  }\n\n  /**\n   *\n   * @description Removes all beacon values from the storage. After using this method, this instance is no longer usable.\n   * You will have to instanciate a new BeaconWallet.\n   */\n  async disconnect() {\n    await this.client.destroy();\n  }\n\n  /**\n   *\n   * @description This method removes the active account from local storage by setting it to undefined.\n   */\n  async clearActiveAccount() {\n    await this.client.setActiveAccount();\n  }\n}\n"]},"metadata":{},"sourceType":"module"}