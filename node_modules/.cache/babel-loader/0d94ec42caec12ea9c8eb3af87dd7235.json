{"ast":null,"code":"/** PURE_IMPORTS_START _observable_ConnectableObservable PURE_IMPORTS_END */\nimport { connectableObservableDescriptor } from '../observable/ConnectableObservable';\nexport function multicast(subjectOrSubjectFactory, selector) {\n  return function multicastOperatorFunction(source) {\n    var subjectFactory;\n\n    if (typeof subjectOrSubjectFactory === 'function') {\n      subjectFactory = subjectOrSubjectFactory;\n    } else {\n      subjectFactory = function subjectFactory() {\n        return subjectOrSubjectFactory;\n      };\n    }\n\n    if (typeof selector === 'function') {\n      return source.lift(new MulticastOperator(subjectFactory, selector));\n    }\n\n    var connectable = Object.create(source, connectableObservableDescriptor);\n    connectable.source = source;\n    connectable.subjectFactory = subjectFactory;\n    return connectable;\n  };\n}\n\nvar MulticastOperator = /*@__PURE__*/function () {\n  function MulticastOperator(subjectFactory, selector) {\n    this.subjectFactory = subjectFactory;\n    this.selector = selector;\n  }\n\n  MulticastOperator.prototype.call = function (subscriber, source) {\n    var selector = this.selector;\n    var subject = this.subjectFactory();\n    var subscription = selector(subject).subscribe(subscriber);\n    subscription.add(source.subscribe(subject));\n    return subscription;\n  };\n\n  return MulticastOperator;\n}();\n\nexport { MulticastOperator };","map":{"version":3,"mappings":"AAIA;AA6BA,SAAMA,+BAAN,QAAgC,qCAAhC;OAEE,SAAOC,SAAP,CAAgBC,uBAAhB,EAA0CC,QAA1C,EAA+D;SAC7D,SAAIC,yBAAJ,CAAqCC,MAArC,EAAqC;IACrC,IAAIC,cAAJ;;QACE,mCAAmC,YAAwB;MAC5DA;WACC;oBACqB,6BAAwB;QAC3C;MACH;IAED;;QACE,OAAOH,QAAP,KAAmB,YAAI;MACxB;IAED;;IACA,eAAY,GAAMI,MAAG,OAAH,CAAUF,MAAV,EAAUL,+BAAV,CAAlB;IACAQ,WAAW,CAACH,MAAZ,GAAYA,MAAZ;IAEAG,WAAkC,eAAlC,GAA8CF,cAA9C;IACA;EACH;AAED;;IACEG,iCAAoB,YACA;WADAA,kCAAgCN;IAChC;IACnB;EACD;;mBACU,kBAAkB;IAC1B,IAAMA,QAAO,GAAG,KAAKA,QAArB;IACA,IAAMO,eAAeJ,cAAf,EAAN;IACA,gBAAgB,GAACH,QAAO,SAAP,CAAiBQ,SAAjB,CAA2BC,UAA3B,CAAjB;IACAC,YAAO,IAAP,CAAOR,MAAa,UAAb,CAAaK,OAAb,CAAP;IACD;EACH;;EAXA,OAWCD,iBAXD;CACsB","names":["connectableObservableDescriptor","multicast","subjectOrSubjectFactory","selector","multicastOperatorFunction","source","subjectFactory","Object","connectable","MulticastOperator","subject","subscribe","subscriber","subscription"],"sources":["../../../src/internal/operators/multicast.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}