{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport function withLatestFrom() {\n  var args = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    args[_i] = arguments[_i];\n  }\n\n  return function (source) {\n    var project;\n\n    if (typeof args[args.length - 1] === 'function') {\n      project = args.pop();\n    }\n\n    var observables = args;\n    return source.lift(new WithLatestFromOperator(observables, project));\n  };\n}\n\nvar WithLatestFromOperator = /*@__PURE__*/function () {\n  function WithLatestFromOperator(observables, project) {\n    this.observables = observables;\n    this.project = project;\n  }\n\n  WithLatestFromOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new WithLatestFromSubscriber(subscriber, this.observables, this.project));\n  };\n\n  return WithLatestFromOperator;\n}();\n\nvar WithLatestFromSubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(WithLatestFromSubscriber, _super);\n\n  function WithLatestFromSubscriber(destination, observables, project) {\n    var _this = _super.call(this, destination) || this;\n\n    _this.observables = observables;\n    _this.project = project;\n    _this.toRespond = [];\n    var len = observables.length;\n    _this.values = new Array(len);\n\n    for (var i = 0; i < len; i++) {\n      _this.toRespond.push(i);\n    }\n\n    for (var i = 0; i < len; i++) {\n      var observable = observables[i];\n\n      _this.add(subscribeToResult(_this, observable, undefined, i));\n    }\n\n    return _this;\n  }\n\n  WithLatestFromSubscriber.prototype.notifyNext = function (_outerValue, innerValue, outerIndex) {\n    this.values[outerIndex] = innerValue;\n    var toRespond = this.toRespond;\n\n    if (toRespond.length > 0) {\n      var found = toRespond.indexOf(outerIndex);\n\n      if (found !== -1) {\n        toRespond.splice(found, 1);\n      }\n    }\n  };\n\n  WithLatestFromSubscriber.prototype.notifyComplete = function () {};\n\n  WithLatestFromSubscriber.prototype._next = function (value) {\n    if (this.toRespond.length === 0) {\n      var args = [value].concat(this.values);\n\n      if (this.project) {\n        this._tryProject(args);\n      } else {\n        this.destination.next(args);\n      }\n    }\n  };\n\n  WithLatestFromSubscriber.prototype._tryProject = function (args) {\n    var result;\n\n    try {\n      result = this.project.apply(this, args);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n\n    this.destination.next(result);\n  };\n\n  return WithLatestFromSubscriber;\n}(OuterSubscriber);","map":{"version":3,"mappings":";AAGA,OAAO,KAAEA,OAAT,MAAwB,OAAxB;AAEA,SAASC,eAAT,QAA4B,oBAA5B;AAiEA,SAAMC,iBAAN,QAA8B,2BAA9B;OAAqC,0BAAqE;UAArE;;OAAA,0BAAqE;;EACxG;;SACE,UAAiBC,MAAjB,EAAiB;IACjB,IAAIC,OAAJ;;QACE,OAAOC,IAAG,KAAK,OAAL,GAAW,CAAX,CAAV,KAAqB;MACtBD;IACD;;IACA,eAAc,GAAIC,IAAlB;IACA;EACH;AAED;;IACEC,sCAAoB,YAC6C;WAD7CA,oCAA8BF;IAC9B;IACnB;EAED;;wBACgB,WAAcG,6BAAyBJ,MAAzB,EAAqC;IAClE;EACH;;EARA,OAQCG,sBARD;AAeA,CAdsB;;IAcuBE,kDAAqBC,MAArB,EAAqB;EAIhET,4CAAYS,MAAZ;;WAAAD,yBAGQE,aAAYC,aAYnBP;IAdmB,kBAAW,KAAX,uBAA8B,IAA9B;;IACAQ;IAJZA,gBAASR,OAAT;IAMNQ,KAAM,UAAN,GAAY,EAAZ;IACA,OAAK,cAAa,OAAlB;IAEAA,KAAK,OAAL,GAAc,IAAGC,KAAH,CAAWC,GAAX,CAAd;;SACE,IAAIC,CAAC,UAAUD,KAAKC,CAAC,IAAE;MACxBH;IAED;;SACE,IAAIG,WAAUD,KAAGC;MACjB,cAAS,cAAwB,GAAjC;;MACDH;;;IACF;EAED;;0BAEc,WAAcI,aAAW;IACrC,KAAMC,MAAN,CAAMC,UAAN,IAAuBC,UAAvB;IACA,IAAIC,SAAS,GAAC,KAAMA,SAApB;;QACEA,SAAW,OAAX,GAAc,GAAU;MACxB,IAAIC,KAAK,YAAS,QAAT,CAASH,UAAT,CAAT;;UACEG,UAAU;QACXD;MACF;IACF;EAED;;EAEAZ,wBAAC,UAAD,CAACc,cAAD,GAAC,aAES,CAFV;;0BAGqB,WAAYC,QAAE;QAC/B,KAAMH,SAAN,CAAcI,MAAd,KAAwB;MACxB,IAAInB,IAAI,GAAC,QAASoB,MAAT,CAAS,WAAT,CAAT;;UACE,KAAKrB;QACN;aACC;QACD;MACF;IACF;EAEO;;0BACU;IAChB,IAAIsB,MAAJ;;QACE;MACDA;IAAC,SACAC,KAAK;MACL,iBAAOC,KAAP,CAAOD,GAAP;MACD;IACD;;IACD;EACH;;EA1D6C;CAAA","names":["tslib_1","OuterSubscriber","subscribeToResult","source","project","args","WithLatestFromOperator","call","WithLatestFromSubscriber","_super","destination","observables","_this","Array","len","i","notifyNext","values","outerIndex","innerValue","toRespond","found","notifyComplete","_next","length","concat","result","err","error"],"sources":["../../../src/internal/operators/withLatestFrom.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}