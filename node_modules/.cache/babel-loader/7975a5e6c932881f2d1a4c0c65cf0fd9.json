{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-3f3f0651\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  ref: \"walletConnectBar\"\n};\nexport function render(_ctx, _cache) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => _ctx.connectWallet && _ctx.connectWallet(...args)),\n    ref: \"connectWalletButton\"\n  }, \"Connect Wallet\", 512\n  /* NEED_PATCH */\n  )], 512\n  /* NEED_PATCH */\n  );\n}","map":{"version":3,"mappings":";;;;;EACSA,GAAG,EAAC;;;uBAATC,oBAEM,KAFN,cAEM,CADFC,oBAAgF,QAAhF,EAAgF;IAAvEC,OAAK,yCAAEC,iDAAF,CAAkE;IAAjDJ,GAAG,EAAC;EAA6C,CAAhF,EAAyD,gBAAzD,EAAuE;EAAA;EAAvE,CACE,CAFN;;EAAA","names":["ref","_createElementBlock","_createElementVNode","onClick","_ctx"],"sourceRoot":"","sources":["/Users/benjaminwestbrook/Repositories/ninter/src/components/walletConnect.vue"],"sourcesContent":["<template>\n    <div ref=\"walletConnectBar\">\n        <button @click=\"connectWallet\" ref=\"connectWalletButton\">Connect Wallet</button>\n    </div>\n</template>\n\n<script>\n\nimport { BeaconWallet } from '@taquito/beacon-wallet'\nimport { TezosToolkit } from '@taquito/taquito'\nimport { NODE_URL } from '../constants'\n\nconst Tezos = new TezosToolkit(NODE_URL);\nlet globalWallet = undefined\n\nconst getBeaconInstance = async () => {\n  if (!globalWallet) {\n    // Create a new BeaconWallet instance. The options will be passed to the DAppClient constructor.\n    const wallet = new BeaconWallet({name: \"txl\"})\n\n    // Setting the wallet as the wallet provider for Taquito.\n    Tezos.setWalletProvider(wallet)\n    globalWallet = wallet\n  }\n  return globalWallet\n}\n\nexport default {\n    props: [\n        \"header_string\",\n        \"information\"\n        ],\n    methods: {\n    async connectWallet () {\n            wallet = getBeaconInstance()\n\n            const perms = await wallet.requestPermissions()\n            console.log(perms)\n            }\n        }\n    }\n}\n\n</script>\n\n<style scoped>\n.modal{\n    width: 400px;\n    padding: 20px;\n    margin: 100px auto;\n    border-radius: 10px;\n}\n.backdrop{\n    top: 0;\n    background: rgb(0.1, 0.1, 0.1);\n    width: 100%;\n    height: 100%;\n}\n</style>"]},"metadata":{},"sourceType":"module"}