{"ast":null,"code":"const cbs = [_ => undefined];\n/**\n * A mock for postmessage if run in node.js environment\n */\n\nlet windowRef = {\n  postMessage: (message, _target) => {\n    console.log('GOT MOCK POST MESSAGE', message);\n    cbs.forEach(callbackElement => {\n      callbackElement({\n        data: message\n      });\n    });\n  },\n  addEventListener: (_name, eventCallback) => {\n    cbs.push(eventCallback);\n  },\n  removeEventListener: (_name, eventCallback) => {\n    cbs.splice(cbs.indexOf(element => element === eventCallback), 1);\n  },\n  location: {\n    origin: '*'\n  }\n};\n\ntry {\n  if (typeof window !== 'undefined') {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    windowRef = window;\n  }\n} catch (windowError) {\n  console.log(`not defined: ${windowError}`);\n}\n\nconst clearMockWindowState = () => {\n  cbs.length = 0;\n};\n\nexport { windowRef, clearMockWindowState };","map":{"version":3,"mappings":"AAEA,MAAMA,GAAG,GAAe,CAAEC,CAAD,IAAsBC,SAAvB,CAAxB;AAEA;;;;AAGA,IAAIC,SAAS,GAAG;EACdC,WAAW,EAAE,CAACC,OAAD,EAA4CC,OAA5C,KAAsE;IACjFC,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCH,OAArC;IACAL,GAAG,CAACS,OAAJ,CAAaC,eAAD,IAA8B;MACxCA,eAAe,CAAC;QAAEC,IAAI,EAAEN;MAAR,CAAD,CAAf;IACD,CAFD;EAGD,CANa;EAOdO,gBAAgB,EAAE,CAACC,KAAD,EAAgBC,aAAhB,KAAiD;IACjEd,GAAG,CAACe,IAAJ,CAASD,aAAT;EACD,CATa;EAUdE,mBAAmB,EAAE,CAACH,KAAD,EAAgBC,aAAhB,KAAiD;IACpEd,GAAG,CAACiB,MAAJ,CACEjB,GAAG,CAACkB,OAAJ,CAAaC,OAAD,IAAaA,OAAO,KAAKL,aAArC,CADF,EAEE,CAFF;EAID,CAfa;EAgBdM,QAAQ,EAAE;IACRC,MAAM,EAAE;EADA;AAhBI,CAAhB;;AAqBA,IAAI;EACF,IAAI,OAAOC,MAAP,KAAkB,WAAtB,EAAmC;IACjC;IACAnB,SAAS,GAAGmB,MAAZ;EACD;AACF,CALD,CAKE,OAAOC,WAAP,EAAoB;EACpBhB,OAAO,CAACC,GAAR,CAAY,gBAAgBe,WAAW,EAAvC;AACD;;AAED,MAAMC,oBAAoB,GAAe,MAAW;EAClDxB,GAAG,CAACyB,MAAJ,GAAa,CAAb;AACD,CAFD;;AAIA,SAAStB,SAAT,EAAoBqB,oBAApB","names":["cbs","_","undefined","windowRef","postMessage","message","_target","console","log","forEach","callbackElement","data","addEventListener","_name","eventCallback","push","removeEventListener","splice","indexOf","element","location","origin","window","windowError","clearMockWindowState","length"],"sourceRoot":"","sources":["../../src/MockWindow.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}