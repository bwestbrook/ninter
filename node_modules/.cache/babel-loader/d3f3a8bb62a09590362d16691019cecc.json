{"ast":null,"code":"/*! typedarray-to-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n\n/**\n * Convert a typed array to a Buffer without a copy\n *\n * Author:   Feross Aboukhadijeh <https://feross.org>\n * License:  MIT\n *\n * `npm install typedarray-to-buffer`\n */\nmodule.exports = function typedarrayToBuffer(arr) {\n  return ArrayBuffer.isView(arr) // To avoid a copy, use the typed array's underlying ArrayBuffer to back\n  // new Buffer, respecting the \"view\", i.e. byteOffset and byteLength\n  ? Buffer.from(arr.buffer, arr.byteOffset, arr.byteLength) // Pass through all other types to `Buffer.from`\n  : Buffer.from(arr);\n};","map":{"version":3,"names":["module","exports","typedarrayToBuffer","arr","ArrayBuffer","isView","Buffer","from","buffer","byteOffset","byteLength"],"sources":["/Users/benjaminwestbrook/Repositories/ninter/node_modules/typedarray-to-buffer/index.js"],"sourcesContent":["/*! typedarray-to-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/**\n * Convert a typed array to a Buffer without a copy\n *\n * Author:   Feross Aboukhadijeh <https://feross.org>\n * License:  MIT\n *\n * `npm install typedarray-to-buffer`\n */\n\nmodule.exports = function typedarrayToBuffer (arr) {\n  return ArrayBuffer.isView(arr)\n    // To avoid a copy, use the typed array's underlying ArrayBuffer to back\n    // new Buffer, respecting the \"view\", i.e. byteOffset and byteLength\n    ? Buffer.from(arr.buffer, arr.byteOffset, arr.byteLength)\n    // Pass through all other types to `Buffer.from`\n    : Buffer.from(arr)\n}\n"],"mappings":"AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAA,MAAM,CAACC,OAAP,GAAiB,SAASC,kBAAT,CAA6BC,GAA7B,EAAkC;EACjD,OAAOC,WAAW,CAACC,MAAZ,CAAmBF,GAAnB,EACL;EACA;EAFK,EAGHG,MAAM,CAACC,IAAP,CAAYJ,GAAG,CAACK,MAAhB,EAAwBL,GAAG,CAACM,UAA5B,EAAwCN,GAAG,CAACO,UAA5C,CAHG,CAIL;EAJK,EAKHJ,MAAM,CAACC,IAAP,CAAYJ,GAAZ,CALJ;AAMD,CAPD"},"metadata":{},"sourceType":"script"}