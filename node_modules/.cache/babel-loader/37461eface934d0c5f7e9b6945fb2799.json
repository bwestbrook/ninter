{"ast":null,"code":"import { assertNever } from '../utils/assert-never';\nimport { AbortedBeaconError, UnknownBeaconError, NetworkNotSupportedBeaconError, NoAddressBeaconError, NoPrivateKeyBeaconError, NotGrantedBeaconError, ParametersInvalidBeaconError, TooManyOperationsBeaconError, TransactionInvalidBeaconError, SignatureTypeNotSupportedBeaconError, BroadcastBeaconError // EncryptionTypeNotSupportedBeaconError\n} from '..';\nimport { BeaconErrorType } from '@airgap/beacon-types';\n/**\n * @category Error\n */\n\nexport class BeaconError {\n  constructor(errorType, message) {\n    this.name = 'BeaconError';\n    this.title = 'Error'; // Visible in the UI\n\n    this.message = `[${errorType}]:${message}`;\n    this.description = message;\n  }\n\n  get fullDescription() {\n    return {\n      description: this.description\n    };\n  }\n\n  static getError(errorType, errorData) {\n    switch (errorType) {\n      case BeaconErrorType.BROADCAST_ERROR:\n        return new BroadcastBeaconError();\n\n      case BeaconErrorType.NETWORK_NOT_SUPPORTED:\n        return new NetworkNotSupportedBeaconError();\n\n      case BeaconErrorType.NO_ADDRESS_ERROR:\n        return new NoAddressBeaconError();\n\n      case BeaconErrorType.NO_PRIVATE_KEY_FOUND_ERROR:\n        return new NoPrivateKeyBeaconError();\n\n      case BeaconErrorType.NOT_GRANTED_ERROR:\n        return new NotGrantedBeaconError();\n\n      case BeaconErrorType.PARAMETERS_INVALID_ERROR:\n        return new ParametersInvalidBeaconError();\n\n      case BeaconErrorType.TOO_MANY_OPERATIONS:\n        return new TooManyOperationsBeaconError();\n\n      case BeaconErrorType.TRANSACTION_INVALID_ERROR:\n        return new TransactionInvalidBeaconError(errorData);\n\n      case BeaconErrorType.SIGNATURE_TYPE_NOT_SUPPORTED:\n        return new SignatureTypeNotSupportedBeaconError();\n      // case BeaconErrorType.ENCRYPTION_TYPE_NOT_SUPPORTED:\n      //   return new EncryptionTypeNotSupportedBeaconError()\n\n      case BeaconErrorType.ABORTED_ERROR:\n        return new AbortedBeaconError();\n\n      case BeaconErrorType.UNKNOWN_ERROR:\n        return new UnknownBeaconError();\n\n      default:\n        assertNever(errorType);\n    }\n  }\n\n}","map":{"version":3,"mappings":"AAAA,SAASA,WAAT,QAA4B,uBAA5B;AACA,SACEC,kBADF,EAEEC,kBAFF,EAGEC,8BAHF,EAIEC,oBAJF,EAKEC,uBALF,EAMEC,qBANF,EAOEC,4BAPF,EAQEC,4BARF,EASEC,6BATF,EAUEC,oCAVF,EAWEC,oBAXF,CAYE;AAZF,OAaO,IAbP;AAcA,SAASC,eAAT,QAAgC,sBAAhC;AAEA;;;;AAGA,OAAM,MAAgBC,WAAhB,CAA2B;EAW/BC,YAAYC,SAAZ,EAAwCC,OAAxC,EAAuD;IAVhD,YAAe,aAAf;IAGA,aAAgB,OAAhB,CAOgD,CAPxB;;IAQ7B,KAAKA,OAAL,GAAe,IAAID,SAAS,KAAKC,OAAO,EAAxC;IACA,KAAKC,WAAL,GAAmBD,OAAnB;EACD;;EAPyB,IAAfE,eAAe;IACxB,OAAO;MAAED,WAAW,EAAE,KAAKA;IAApB,CAAP;EACD;;EAOqB,OAARE,QAAQ,CAACJ,SAAD,EAA6BK,SAA7B,EAA+C;IACnE,QAAQL,SAAR;MACE,KAAKH,eAAe,CAACS,eAArB;QACE,OAAO,IAAIV,oBAAJ,EAAP;;MACF,KAAKC,eAAe,CAACU,qBAArB;QACE,OAAO,IAAInB,8BAAJ,EAAP;;MACF,KAAKS,eAAe,CAACW,gBAArB;QACE,OAAO,IAAInB,oBAAJ,EAAP;;MACF,KAAKQ,eAAe,CAACY,0BAArB;QACE,OAAO,IAAInB,uBAAJ,EAAP;;MACF,KAAKO,eAAe,CAACa,iBAArB;QACE,OAAO,IAAInB,qBAAJ,EAAP;;MACF,KAAKM,eAAe,CAACc,wBAArB;QACE,OAAO,IAAInB,4BAAJ,EAAP;;MACF,KAAKK,eAAe,CAACe,mBAArB;QACE,OAAO,IAAInB,4BAAJ,EAAP;;MACF,KAAKI,eAAe,CAACgB,yBAArB;QACE,OAAO,IAAInB,6BAAJ,CAAkCW,SAAlC,CAAP;;MACF,KAAKR,eAAe,CAACiB,4BAArB;QACE,OAAO,IAAInB,oCAAJ,EAAP;MACF;MACA;;MACA,KAAKE,eAAe,CAACkB,aAArB;QACE,OAAO,IAAI7B,kBAAJ,EAAP;;MACF,KAAKW,eAAe,CAACmB,aAArB;QACE,OAAO,IAAI7B,kBAAJ,EAAP;;MACF;QACEF,WAAW,CAACe,SAAD,CAAX;IA1BJ;EA4BD;;AA7C8B","names":["assertNever","AbortedBeaconError","UnknownBeaconError","NetworkNotSupportedBeaconError","NoAddressBeaconError","NoPrivateKeyBeaconError","NotGrantedBeaconError","ParametersInvalidBeaconError","TooManyOperationsBeaconError","TransactionInvalidBeaconError","SignatureTypeNotSupportedBeaconError","BroadcastBeaconError","BeaconErrorType","BeaconError","constructor","errorType","message","description","fullDescription","getError","errorData","BROADCAST_ERROR","NETWORK_NOT_SUPPORTED","NO_ADDRESS_ERROR","NO_PRIVATE_KEY_FOUND_ERROR","NOT_GRANTED_ERROR","PARAMETERS_INVALID_ERROR","TOO_MANY_OPERATIONS","TRANSACTION_INVALID_ERROR","SIGNATURE_TYPE_NOT_SUPPORTED","ABORTED_ERROR","UNKNOWN_ERROR"],"sourceRoot":"","sources":["../../../src/errors/BeaconError.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}