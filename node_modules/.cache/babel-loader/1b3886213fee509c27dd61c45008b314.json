{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nexport function sequenceEqual(compareTo, comparator) {\n  return function (source) {\n    return source.lift(new SequenceEqualOperator(compareTo, comparator));\n  };\n}\n\nvar SequenceEqualOperator = /*@__PURE__*/function () {\n  function SequenceEqualOperator(compareTo, comparator) {\n    this.compareTo = compareTo;\n    this.comparator = comparator;\n  }\n\n  SequenceEqualOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new SequenceEqualSubscriber(subscriber, this.compareTo, this.comparator));\n  };\n\n  return SequenceEqualOperator;\n}();\n\nexport { SequenceEqualOperator };\n\nvar SequenceEqualSubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(SequenceEqualSubscriber, _super);\n\n  function SequenceEqualSubscriber(destination, compareTo, comparator) {\n    var _this = _super.call(this, destination) || this;\n\n    _this.compareTo = compareTo;\n    _this.comparator = comparator;\n    _this._a = [];\n    _this._b = [];\n    _this._oneComplete = false;\n\n    _this.destination.add(compareTo.subscribe(new SequenceEqualCompareToSubscriber(destination, _this)));\n\n    return _this;\n  }\n\n  SequenceEqualSubscriber.prototype._next = function (value) {\n    if (this._oneComplete && this._b.length === 0) {\n      this.emit(false);\n    } else {\n      this._a.push(value);\n\n      this.checkValues();\n    }\n  };\n\n  SequenceEqualSubscriber.prototype._complete = function () {\n    if (this._oneComplete) {\n      this.emit(this._a.length === 0 && this._b.length === 0);\n    } else {\n      this._oneComplete = true;\n    }\n\n    this.unsubscribe();\n  };\n\n  SequenceEqualSubscriber.prototype.checkValues = function () {\n    var _c = this,\n        _a = _c._a,\n        _b = _c._b,\n        comparator = _c.comparator;\n\n    while (_a.length > 0 && _b.length > 0) {\n      var a = _a.shift();\n\n      var b = _b.shift();\n\n      var areEqual = false;\n\n      try {\n        areEqual = comparator ? comparator(a, b) : a === b;\n      } catch (e) {\n        this.destination.error(e);\n      }\n\n      if (!areEqual) {\n        this.emit(false);\n      }\n    }\n  };\n\n  SequenceEqualSubscriber.prototype.emit = function (value) {\n    var destination = this.destination;\n    destination.next(value);\n    destination.complete();\n  };\n\n  SequenceEqualSubscriber.prototype.nextB = function (value) {\n    if (this._oneComplete && this._a.length === 0) {\n      this.emit(false);\n    } else {\n      this._b.push(value);\n\n      this.checkValues();\n    }\n  };\n\n  SequenceEqualSubscriber.prototype.completeB = function () {\n    if (this._oneComplete) {\n      this.emit(this._a.length === 0 && this._b.length === 0);\n    } else {\n      this._oneComplete = true;\n    }\n  };\n\n  return SequenceEqualSubscriber;\n}(Subscriber);\n\nexport { SequenceEqualSubscriber };\n\nvar SequenceEqualCompareToSubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(SequenceEqualCompareToSubscriber, _super);\n\n  function SequenceEqualCompareToSubscriber(destination, parent) {\n    var _this = _super.call(this, destination) || this;\n\n    _this.parent = parent;\n    return _this;\n  }\n\n  SequenceEqualCompareToSubscriber.prototype._next = function (value) {\n    this.parent.nextB(value);\n  };\n\n  SequenceEqualCompareToSubscriber.prototype._error = function (err) {\n    this.parent.error(err);\n    this.unsubscribe();\n  };\n\n  SequenceEqualCompareToSubscriber.prototype._complete = function () {\n    this.parent.completeB();\n    this.unsubscribe();\n  };\n\n  return SequenceEqualCompareToSubscriber;\n}(Subscriber);","map":{"version":3,"mappings":";AAEA,OAAO,KAAEA,OAAT,MAAqB,OAArB;AA8DA,SAAMC,UAAN,QAAgB,eAAhB;OAEE,SAAOC,aAAP,CAA6BC,SAA7B,EAAkCC,UAAlC,EAA8C;EAC/C;IAAA;EAAA;AAED;;IACEC,qCAAoB,YACA;WADAA,sBAAwBF;IACxB,iBAAUA,SAAV;IACnB;EAED;;uBACgB,WAAcG,6BAAwBC,MAAxB,EAAoC;IACjE;EACH;;EARA,OAQCF,qBARD;CACsB;;AActB;;IAAmDG,iDAAaC,MAAb,EAAa;EAK9DT,2CAAYS,MAAZ;;WAAAD,wBAGEE,aAAkBP,WAEnBC;IAJmB,8BAAwBM,WAAxB,KAAwB,IAAxB;;IACAC,kBAAUR,SAAV;IANZQ,mBAAaP,UAAb;IACAO,WAAU,EAAV;IACAA;IAMLA,KAAI,CAACC,YAAL,GAAqC,KAArC;;;;IACF;EAES;;yBACC,WAAqBC,QAAG,UAAcC,KAAd,EAAc;QAC7C,KAAKF,YAAL,IAAiB;MAClB;WACC;MACA,KAAKG,EAAL,CAAKC,IAAL,CAAKF,KAAL;;MACD;IACF;EAEM;;yBACI,WAAcG;QACrB,KAAKL,cAAa;MACnB;WACC;MACD;IACD;;IACD;EAED;;yBACU,WAAIM,cAAI;IAChB,SAAS,IAAT;IAAA,IAAUH,EAAM,GAAII,KAApB;IAAA,IAA2BC,OAAM,GAAjC;IAAA,IAAuChB,0BAAvC;;WACEW,EAAK,OAAL,GAAW,CAAX,IAAmBK;MACnB,IAAIC,CAAC,GAAGN,EAAE,CAACO,KAAH,EAAR;;MACA,IAAIC,cAAJ;;MACA,IAAIC,gBAAJ;;UACE;QACDA;MAAC,SACAC,GAAK;QACN;MACD;;UACE,WAAU;QACX;MACF;IACF;EAED;;yBACU,kBAAqB;IAC7B,eAAY,GAAK,KAAMf,WAAvB;IACAA,WAAW,CAACgB,IAAZ,CAAYZ,KAAZ;IACDJ;EAED;;yBACW,WAAqBiB,QAAG,UAAcb,KAAd,EAAc;QAC7C,KAAKF,YAAL,IAAiB;MAClB;WACC;MACA,KAAKQ,EAAL,CAAKJ,IAAL,CAAKF,KAAL;;MACD;IACF;EAED;;yBACW,WAAcc;QACrB,KAAKhB,cAAa;MACnB;WACC;MACD;IACF;EACH;;EArEmD;CAAA;;AAuEnD;;IAAqDiB,0DAAapB,MAAb,EAAa;EAChET,oDAAYS,MAAZ;;WAAAoB,iCACQnB,aACPoB;IAF6C,YAAMrB,MAAN,KAAM,CAA+B,IAA/B,EAA+BC,WAA/B,KAA+B,IAArC;;;IAE7C;EAES;;kCACiB;IAC1B;EAES;;kCACe;IACvB,KAAKoB,MAAL,CAAKC,KAAL,CAAkBC,GAAlB;IACD;EAES;;kCACgB;IACxB,KAAKF,MAAL,CAAKF,SAAL;IACD;EACH;;EAlBqD;CAAA","names":["tslib_1","Subscriber","sequenceEqual","compareTo","comparator","SequenceEqualOperator","call","source","SequenceEqualSubscriber","_super","destination","_this","_oneComplete","_next","value","_a","push","_complete","checkValues","_c","_b","a","shift","b","areEqual","e","next","nextB","completeB","SequenceEqualCompareToSubscriber","parent","error","err"],"sources":["../../../src/internal/operators/sequenceEqual.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}