{"ast":null,"code":"/** PURE_IMPORTS_START _Observable PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nexport function range(start, count, scheduler) {\n  if (start === void 0) {\n    start = 0;\n  }\n\n  return new Observable(function (subscriber) {\n    if (count === undefined) {\n      count = start;\n      start = 0;\n    }\n\n    var index = 0;\n    var current = start;\n\n    if (scheduler) {\n      return scheduler.schedule(dispatch, 0, {\n        index: index,\n        count: count,\n        start: start,\n        subscriber: subscriber\n      });\n    } else {\n      do {\n        if (index++ >= count) {\n          subscriber.complete();\n          break;\n        }\n\n        subscriber.next(current++);\n\n        if (subscriber.closed) {\n          break;\n        }\n      } while (true);\n    }\n\n    return undefined;\n  });\n}\nexport function dispatch(state) {\n  var start = state.start,\n      index = state.index,\n      count = state.count,\n      subscriber = state.subscriber;\n\n  if (index >= count) {\n    subscriber.complete();\n    return;\n  }\n\n  subscriber.next(start);\n\n  if (subscriber.closed) {\n    return;\n  }\n\n  state.index = index + 1;\n  state.start = start + 1;\n  this.schedule(state);\n}","map":{"version":3,"mappings":"AACA;AAoCA,SAAMA,UAAN,QAAuC,eAAvC;OAAsB,wCAAiB;EAGrC,SAAO,KAAI,MAAX,EAA8B;IAC5BC,KAAI,IAAJ;;;aAEED,WAAU;QACXE;MAEGA,KAAK,GAAGD,KAAR;MACAA,QAAO,CAAP;IAEJ;;QACEE,QAAO;eACL,GAAKF;;mBACJ;MACJ;QAAME,YAAN;QAAMD,YAAN;QAAMD,YAAN;QAAMG;MAAN;;;YAKID;UACDC,UAAW,CAAIC,QAAf;UACI;;;kBAEH;;QACF,cAAc,OAAd,EAAc;UAChB;QAEM;MACN;IACJ;;IAGK;EACI;;gBAGNC,SAAWC,OAAW;MACtBN,QAAOM;MAAAJ;MAAAD;MAAAE;;MACRD;IAEDC,UAAW,CAAIC,QAAf;IAEI;;;YAEH;;EAED,cAAc,OAAd,EAAuB;IACvB;EAEA;;EACDE","names":["Observable","start","count","index","subscriber","complete","dispatch","state"],"sources":["../../../src/internal/observable/range.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}