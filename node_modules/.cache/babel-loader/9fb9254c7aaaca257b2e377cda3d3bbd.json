{"ast":null,"code":"import \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.error.cause.js\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport { BeaconEvent } from '../events';\nimport { TransportType, StorageKey, BeaconMessageType, PermissionScope, NetworkType, Origin, BeaconErrorType, SigningType, ColorMode } from '@airgap/beacon-types';\nimport { Client, BeaconError, AppMetadataManager, Serializer, LocalStorage, getAccountIdentifier, getSenderId, BEACON_VERSION, Logger } from '@airgap/beacon-core';\nimport { getAddressFromPublicKey, ExposedPromise, generateGUID } from '@airgap/beacon-utils';\nimport { messageEvents } from '../beacon-message-events';\nimport { TezblockBlockExplorer } from '../utils/tezblock-blockexplorer';\nimport { closeToast } from '@airgap/beacon-ui';\nimport { BeaconEventHandler } from '@airgap/beacon-dapp';\nimport { DappPostMessageTransport } from '../transports/DappPostMessageTransport';\nimport { DappP2PTransport } from '../transports/DappP2PTransport';\nimport { PostMessageTransport } from '@airgap/beacon-transport-postmessage';\nimport { getColorMode, setColorMode, setDesktopList, setExtensionList, setWebList, setiOSList, getDesktopList, getExtensionList, getWebList, getiOSList } from '@airgap/beacon-ui';\nconst logger = new Logger('DAppClient');\n/**\n * @publicapi\n *\n * The DAppClient has to be used in decentralized applications. It handles all the logic related to connecting to beacon-compatible\n * wallets and sending requests.\n *\n * @category DApp\n */\n\nexport class DAppClient extends Client {\n  constructor(config) {\n    var _a, _b, _c, _d;\n\n    super(Object.assign({\n      storage: config && config.storage ? config.storage : new LocalStorage()\n    }, config));\n    this.events = new BeaconEventHandler();\n    /**\n     * A map of requests that are currently \"open\", meaning we have sent them to a wallet and are still awaiting a response.\n     */\n\n    this.openRequests = new Map();\n    /**\n     * The currently active account. For all requests that are associated to a specific request (operation request, signing request),\n     * the active account is used to determine the network and destination wallet\n     */\n\n    this._activeAccount = new ExposedPromise();\n    /**\n     * The currently active peer. This is used to address a peer in case the active account is not set. (Eg. for permission requests)\n     */\n\n    this._activePeer = new ExposedPromise();\n    this.blockchains = new Map();\n    this.events = new BeaconEventHandler(config.eventHandlers, (_a = config.disableDefaultEvents) !== null && _a !== void 0 ? _a : false);\n    this.blockExplorer = (_b = config.blockExplorer) !== null && _b !== void 0 ? _b : new TezblockBlockExplorer();\n    this.preferredNetwork = (_c = config.preferredNetwork) !== null && _c !== void 0 ? _c : NetworkType.MAINNET;\n    setColorMode((_d = config.colorMode) !== null && _d !== void 0 ? _d : ColorMode.LIGHT);\n    this.disclaimerText = config.disclaimerText;\n    this.appMetadataManager = new AppMetadataManager(this.storage);\n    this.activeAccountLoaded = this.storage.get(StorageKey.ACTIVE_ACCOUNT).then(activeAccountIdentifier => __awaiter(this, void 0, void 0, function* () {\n      if (activeAccountIdentifier) {\n        yield this.setActiveAccount(yield this.accountManager.getAccount(activeAccountIdentifier));\n      } else {\n        yield this.setActiveAccount(undefined);\n      }\n    })).catch(storageError => __awaiter(this, void 0, void 0, function* () {\n      yield this.setActiveAccount(undefined);\n      console.error(storageError);\n    }));\n\n    this.handleResponse = (message, connectionInfo) => __awaiter(this, void 0, void 0, function* () {\n      var _e, _f;\n\n      const openRequest = this.openRequests.get(message.id);\n      logger.log('handleResponse', 'Received message', message, connectionInfo);\n\n      if (message.version === '3') {\n        const typedMessage = message;\n\n        if (openRequest && typedMessage.message.type === BeaconMessageType.Acknowledge) {\n          logger.log(`acknowledge message received for ${message.id}`);\n          console.timeLog(message.id, 'acknowledge');\n          this.events.emit(BeaconEvent.ACKNOWLEDGE_RECEIVED, {\n            message: typedMessage.message,\n            extraInfo: {},\n            walletInfo: yield this.getWalletInfo()\n          }).catch(console.error);\n        } else if (openRequest) {\n          const appMetadata = typedMessage.message\n          /* Why is this unkown cast needed? */\n          .blockchainData.appMetadata;\n\n          if (typedMessage.message.type === BeaconMessageType.PermissionResponse && appMetadata) {\n            yield this.appMetadataManager.addAppMetadata(appMetadata);\n          }\n\n          console.timeLog(typedMessage.id, 'response');\n          console.timeEnd(typedMessage.id);\n\n          if (typedMessage.message.type === BeaconMessageType.Error) {\n            openRequest.reject(typedMessage.message);\n          } else {\n            openRequest.resolve({\n              message,\n              connectionInfo\n            });\n          }\n\n          this.openRequests.delete(typedMessage.id);\n        } else {\n          if (typedMessage.message.type === BeaconMessageType.Disconnect) {\n            const relevantTransport = connectionInfo.origin === Origin.P2P ? this.p2pTransport : (_e = this.postMessageTransport) !== null && _e !== void 0 ? _e : yield this.transport;\n\n            if (relevantTransport) {\n              // TODO: Handle removing it from the right transport (if it was received from the non-active transport)\n              const peers = yield relevantTransport.getPeers();\n              const peer = peers.find(peerEl => peerEl.senderId === message.senderId);\n\n              if (peer) {\n                yield relevantTransport.removePeer(peer);\n                yield this.removeAccountsForPeers([peer]);\n                yield this.events.emit(BeaconEvent.CHANNEL_CLOSED);\n              } else {\n                logger.error('handleDisconnect', 'cannot find peer for sender ID', message.senderId);\n              }\n            }\n          } else {\n            logger.error('handleResponse', 'no request found for id ', message.id);\n          }\n        }\n      } else {\n        const typedMessage = message;\n\n        if (openRequest && typedMessage.type === BeaconMessageType.Acknowledge) {\n          logger.log(`acknowledge message received for ${message.id}`);\n          console.timeLog(message.id, 'acknowledge');\n          this.events.emit(BeaconEvent.ACKNOWLEDGE_RECEIVED, {\n            message: typedMessage,\n            extraInfo: {},\n            walletInfo: yield this.getWalletInfo()\n          }).catch(console.error);\n        } else if (openRequest) {\n          if (typedMessage.type === BeaconMessageType.PermissionResponse && typedMessage.appMetadata) {\n            yield this.appMetadataManager.addAppMetadata(typedMessage.appMetadata);\n          }\n\n          console.timeLog(typedMessage.id, 'response');\n          console.timeEnd(typedMessage.id);\n\n          if (typedMessage.type === BeaconMessageType.Error || message.errorType) {\n            // TODO: Remove \"any\" once we remove support for v1 wallets\n            openRequest.reject(typedMessage);\n          } else {\n            openRequest.resolve({\n              message,\n              connectionInfo\n            });\n          }\n\n          this.openRequests.delete(typedMessage.id);\n        } else {\n          if (typedMessage.type === BeaconMessageType.Disconnect || message.typedMessage.type === BeaconMessageType.Disconnect // TODO: TYPE\n          ) {\n            const relevantTransport = connectionInfo.origin === Origin.P2P ? this.p2pTransport : (_f = this.postMessageTransport) !== null && _f !== void 0 ? _f : yield this.transport;\n\n            if (relevantTransport) {\n              // TODO: Handle removing it from the right transport (if it was received from the non-active transport)\n              const peers = yield relevantTransport.getPeers();\n              const peer = peers.find(peerEl => peerEl.senderId === message.senderId);\n\n              if (peer) {\n                yield relevantTransport.removePeer(peer);\n                yield this.removeAccountsForPeers([peer]);\n                yield this.events.emit(BeaconEvent.CHANNEL_CLOSED);\n              } else {\n                logger.error('handleDisconnect', 'cannot find peer for sender ID', message.senderId);\n              }\n            }\n          } else {\n            logger.error('handleResponse', 'no request found for id ', message.id);\n          }\n        }\n      }\n    });\n  }\n\n  initInternalTransports() {\n    return __awaiter(this, void 0, void 0, function* () {\n      const keyPair = yield this.keyPair;\n\n      if (this.postMessageTransport || this.p2pTransport) {\n        return;\n      }\n\n      this.postMessageTransport = new DappPostMessageTransport(this.name, keyPair, this.storage);\n      yield this.addListener(this.postMessageTransport);\n      this.p2pTransport = new DappP2PTransport(this.name, keyPair, this.storage, this.matrixNodes, this.iconUrl, this.appUrl);\n      yield this.addListener(this.p2pTransport);\n    });\n  }\n\n  init(transport) {\n    const _super = Object.create(null, {\n      init: {\n        get: () => super.init\n      }\n    });\n\n    return __awaiter(this, void 0, void 0, function* () {\n      if (this._initPromise) {\n        return this._initPromise;\n      }\n\n      try {\n        yield this.activeAccountLoaded;\n      } catch (_a) {//\n      }\n\n      this._initPromise = new Promise(resolve => __awaiter(this, void 0, void 0, function* () {\n        if (transport) {\n          yield this.addListener(transport);\n          resolve(yield _super.init.call(this, transport));\n        } else if (this._transport.isSettled()) {\n          yield (yield this.transport).connect();\n          resolve(yield _super.init.call(this, yield this.transport));\n        } else {\n          const activeAccount = yield this.getActiveAccount();\n\n          const stopListening = () => {\n            if (this.postMessageTransport) {\n              this.postMessageTransport.stopListeningForNewPeers().catch(console.error);\n            }\n\n            if (this.p2pTransport) {\n              this.p2pTransport.stopListeningForNewPeers().catch(console.error);\n            }\n          };\n\n          yield this.initInternalTransports();\n\n          if (!this.postMessageTransport || !this.p2pTransport) {\n            return;\n          }\n\n          this.postMessageTransport.connect().then().catch(console.error);\n\n          if (activeAccount && activeAccount.origin) {\n            const origin = activeAccount.origin.type; // Select the transport that matches the active account\n\n            if (origin === Origin.EXTENSION) {\n              resolve(yield _super.init.call(this, this.postMessageTransport));\n            } else if (origin === Origin.P2P) {\n              resolve(yield _super.init.call(this, this.p2pTransport));\n            }\n          } else {\n            const p2pTransport = this.p2pTransport;\n            const postMessageTransport = this.postMessageTransport;\n            postMessageTransport.listenForNewPeer(peer => {\n              logger.log('init', 'postmessage transport peer connected', peer);\n              this.events.emit(BeaconEvent.PAIR_SUCCESS, peer).catch(emitError => console.warn(emitError));\n              this.setActivePeer(peer).catch(console.error);\n              this.setTransport(this.postMessageTransport).catch(console.error);\n              stopListening();\n              resolve(TransportType.POST_MESSAGE);\n            }).catch(console.error);\n            p2pTransport.listenForNewPeer(peer => {\n              logger.log('init', 'p2p transport peer connected', peer);\n              this.events.emit(BeaconEvent.PAIR_SUCCESS, peer).catch(emitError => console.warn(emitError));\n              this.setActivePeer(peer).catch(console.error);\n              this.setTransport(this.p2pTransport).catch(console.error);\n              stopListening();\n              resolve(TransportType.P2P);\n            }).catch(console.error);\n            PostMessageTransport.getAvailableExtensions().then(() => __awaiter(this, void 0, void 0, function* () {\n              this.events.emit(BeaconEvent.PAIR_INIT, {\n                p2pPeerInfo: () => {\n                  p2pTransport.connect().then().catch(console.error);\n                  return p2pTransport.getPairingRequestInfo();\n                },\n                postmessagePeerInfo: () => postMessageTransport.getPairingRequestInfo(),\n                preferredNetwork: this.preferredNetwork,\n                abortedHandler: () => {\n                  this._initPromise = undefined;\n                },\n                disclaimerText: this.disclaimerText\n              }).catch(emitError => console.warn(emitError));\n            })).catch(error => {\n              this._initPromise = undefined;\n              console.error(error);\n            });\n          }\n        }\n      }));\n      return this._initPromise;\n    });\n  }\n  /**\n   * Returns the active account\n   */\n\n\n  getActiveAccount() {\n    return __awaiter(this, void 0, void 0, function* () {\n      return this._activeAccount.promise;\n    });\n  }\n  /**\n   * Sets the active account\n   *\n   * @param account The account that will be set as the active account\n   */\n\n\n  setActiveAccount(account) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (this._activeAccount.isSettled()) {\n        // If the promise has already been resolved we need to create a new one.\n        this._activeAccount = ExposedPromise.resolve(account);\n      } else {\n        this._activeAccount.resolve(account);\n      }\n\n      if (account) {\n        const origin = account.origin.type;\n        yield this.initInternalTransports(); // Select the transport that matches the active account\n\n        if (origin === Origin.EXTENSION) {\n          yield this.setTransport(this.postMessageTransport);\n        } else if (origin === Origin.P2P) {\n          yield this.setTransport(this.p2pTransport);\n        }\n\n        const peer = yield this.getPeer(account);\n        yield this.setActivePeer(peer);\n      } else {\n        yield this.setActivePeer(undefined);\n        yield this.setTransport(undefined);\n      }\n\n      yield this.storage.set(StorageKey.ACTIVE_ACCOUNT, account ? account.accountIdentifier : undefined);\n      yield this.events.emit(BeaconEvent.ACTIVE_ACCOUNT_SET, account);\n      return;\n    });\n  }\n  /**\n   * Clear the active account\n   */\n\n\n  clearActiveAccount() {\n    return this.setActiveAccount();\n  }\n\n  setColorMode(colorMode) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return setColorMode(colorMode);\n    });\n  }\n\n  getColorMode() {\n    return __awaiter(this, void 0, void 0, function* () {\n      return getColorMode();\n    });\n  }\n  /**\n   * @deprecated\n   *\n   * Use getOwnAppMetadata instead\n   */\n\n\n  getAppMetadata() {\n    return __awaiter(this, void 0, void 0, function* () {\n      return this.getOwnAppMetadata();\n    });\n  }\n\n  showPrepare() {\n    return __awaiter(this, void 0, void 0, function* () {\n      const walletInfo = yield (() => __awaiter(this, void 0, void 0, function* () {\n        try {\n          return yield this.getWalletInfo();\n        } catch (_a) {\n          return undefined;\n        }\n      }))();\n      yield this.events.emit(BeaconEvent.SHOW_PREPARE, {\n        walletInfo\n      });\n    });\n  }\n\n  hideUI(elements) {\n    return __awaiter(this, void 0, void 0, function* () {\n      yield this.events.emit(BeaconEvent.HIDE_UI, elements);\n    });\n  }\n  /**\n   * Will remove the account from the local storage and set a new active account if necessary.\n   *\n   * @param accountIdentifier ID of the account\n   */\n\n\n  removeAccount(accountIdentifier) {\n    const _super = Object.create(null, {\n      removeAccount: {\n        get: () => super.removeAccount\n      }\n    });\n\n    return __awaiter(this, void 0, void 0, function* () {\n      const removeAccountResult = _super.removeAccount.call(this, accountIdentifier);\n\n      const activeAccount = yield this.getActiveAccount();\n\n      if (activeAccount && activeAccount.accountIdentifier === accountIdentifier) {\n        yield this.setActiveAccount(undefined);\n      }\n\n      return removeAccountResult;\n    });\n  }\n  /**\n   * Remove all accounts and set active account to undefined\n   */\n\n\n  removeAllAccounts() {\n    const _super = Object.create(null, {\n      removeAllAccounts: {\n        get: () => super.removeAllAccounts\n      }\n    });\n\n    return __awaiter(this, void 0, void 0, function* () {\n      yield _super.removeAllAccounts.call(this);\n      yield this.setActiveAccount(undefined);\n    });\n  }\n  /**\n   * Removes a peer and all the accounts that have been connected through that peer\n   *\n   * @param peer Peer to be removed\n   */\n\n\n  removePeer(peer, sendDisconnectToPeer = false) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const transport = yield this.transport;\n      const removePeerResult = transport.removePeer(peer);\n      yield this.removeAccountsForPeers([peer]);\n\n      if (sendDisconnectToPeer) {\n        yield this.sendDisconnectToPeer(peer, transport);\n      }\n\n      return removePeerResult;\n    });\n  }\n  /**\n   * Remove all peers and all accounts that have been connected through those peers\n   */\n\n\n  removeAllPeers(sendDisconnectToPeers = false) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const transport = yield this.transport;\n      const peers = yield transport.getPeers();\n      const removePeerResult = transport.removeAllPeers();\n      yield this.removeAccountsForPeers(peers);\n\n      if (sendDisconnectToPeers) {\n        const disconnectPromises = peers.map(peer => this.sendDisconnectToPeer(peer, transport));\n        yield Promise.all(disconnectPromises);\n      }\n\n      return removePeerResult;\n    });\n  }\n  /**\n   * Allows the user to subscribe to specific events that are fired in the SDK\n   *\n   * @param internalEvent The event to subscribe to\n   * @param eventCallback The callback that will be called when the event occurs\n   */\n\n\n  subscribeToEvent(internalEvent, eventCallback) {\n    return __awaiter(this, void 0, void 0, function* () {\n      yield this.events.on(internalEvent, eventCallback);\n    });\n  }\n  /**\n   * Check if we have permissions to send the specific message type to the active account.\n   * If no active account is set, only permission requests are allowed.\n   *\n   * @param type The type of the message\n   */\n\n\n  checkPermissions(type) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (type === BeaconMessageType.PermissionRequest) {\n        return true;\n      }\n\n      const activeAccount = yield this.getActiveAccount();\n\n      if (!activeAccount) {\n        throw yield this.sendInternalError('No active account set!');\n      }\n\n      const permissions = activeAccount.scopes;\n\n      switch (type) {\n        case BeaconMessageType.OperationRequest:\n          return permissions.includes(PermissionScope.OPERATION_REQUEST);\n\n        case BeaconMessageType.SignPayloadRequest:\n          return permissions.includes(PermissionScope.SIGN);\n        // TODO: ENCRYPTION\n        // case BeaconMessageType.EncryptPayloadRequest:\n        //   return permissions.includes(PermissionScope.ENCRYPT)\n\n        case BeaconMessageType.BroadcastRequest:\n          return true;\n\n        default:\n          return false;\n      }\n    });\n  }\n\n  addBlockchain(chain) {\n    this.blockchains.set(chain.identifier, chain);\n    chain.getWalletLists().then(walletLists => {\n      setDesktopList(walletLists.desktopList);\n      setExtensionList(walletLists.extensionList);\n      setWebList(walletLists.webList);\n      setiOSList(walletLists.iOSList);\n    });\n  }\n\n  removeBlockchain(chainIdentifier) {\n    this.blockchains.delete(chainIdentifier);\n  }\n  /** Generic messages */\n\n\n  permissionRequest(input) {\n    return __awaiter(this, void 0, void 0, function* () {\n      console.log('PERMISSION REQUEST');\n      const blockchain = this.blockchains.get(input.blockchainIdentifier);\n\n      if (!blockchain) {\n        throw new Error(`Blockchain \"${input.blockchainIdentifier}\" not supported by dAppClient`);\n      }\n\n      const request = Object.assign(Object.assign({}, input), {\n        type: BeaconMessageType.PermissionRequest,\n        blockchainData: Object.assign(Object.assign({}, input.blockchainData), {\n          appMetadata: yield this.getOwnAppMetadata()\n        })\n      });\n      console.log('REQUESTION PERMIMISSION V3', 'xxx', request);\n      const {\n        message: response,\n        connectionInfo\n      } = yield this.makeRequestV3(request).catch(_requestError => __awaiter(this, void 0, void 0, function* () {\n        throw new Error('TODO'); // throw await this.handleRequestError(request, requestError)\n      }));\n      console.log('RESPONSE V3', response, connectionInfo);\n      const partialAccountInfos = yield blockchain.getAccountInfosFromPermissionResponse(response.message); // const accountInfo: AccountInfo = {\n\n      const accountInfo = {\n        accountIdentifier: partialAccountInfos[0].accountId,\n        senderId: response.senderId,\n        origin: {\n          type: connectionInfo.origin,\n          id: connectionInfo.id\n        },\n        address: partialAccountInfos[0].address,\n        publicKey: partialAccountInfos[0].publicKey,\n        scopes: response.message.blockchainData.scopes,\n        connectedAt: new Date().getTime(),\n        chainData: response.message.blockchainData\n      };\n      yield this.accountManager.addAccount(accountInfo);\n      yield this.setActiveAccount(accountInfo);\n      yield blockchain.handleResponse({\n        request,\n        account: accountInfo,\n        output: response,\n        blockExplorer: this.blockExplorer,\n        connectionContext: connectionInfo,\n        walletInfo: yield this.getWalletInfo()\n      });\n      yield this.notifySuccess(request, {\n        account: accountInfo,\n        output: {\n          address: partialAccountInfos[0].address,\n          network: {\n            type: NetworkType.MAINNET\n          },\n          scopes: [PermissionScope.OPERATION_REQUEST]\n        },\n        blockExplorer: this.blockExplorer,\n        connectionContext: connectionInfo,\n        walletInfo: yield this.getWalletInfo()\n      }); // return output\n\n      return response.message;\n    });\n  }\n\n  request(input) {\n    return __awaiter(this, void 0, void 0, function* () {\n      console.log('REQUEST', input);\n      const blockchain = this.blockchains.get(input.blockchainIdentifier);\n\n      if (!blockchain) {\n        throw new Error(`Blockchain \"${blockchain}\" not supported by dAppClient`);\n      }\n\n      yield blockchain.validateRequest(input);\n      const activeAccount = yield this.getActiveAccount();\n\n      if (!activeAccount) {\n        throw yield this.sendInternalError('No active account!');\n      }\n\n      const request = Object.assign(Object.assign({}, input), {\n        type: BeaconMessageType.BlockchainRequest,\n        accountId: activeAccount.accountIdentifier\n      });\n      const {\n        message: response,\n        connectionInfo\n      } = yield this.makeRequestV3(request).catch(requestError => __awaiter(this, void 0, void 0, function* () {\n        console.error(requestError);\n        throw new Error('TODO'); // throw await this.handleRequestError(request, requestError)\n      }));\n      yield blockchain.handleResponse({\n        request,\n        account: activeAccount,\n        output: response,\n        blockExplorer: this.blockExplorer,\n        connectionContext: connectionInfo,\n        walletInfo: yield this.getWalletInfo()\n      });\n      return response.message;\n    });\n  }\n  /**\n   * Send a permission request to the DApp. This should be done as the first step. The wallet will respond\n   * with an publicKey and permissions that were given. The account returned will be set as the \"activeAccount\"\n   * and will be used for the following requests.\n   *\n   * @param input The message details we need to prepare the PermissionRequest message.\n   */\n\n\n  requestPermissions(input) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const request = {\n        appMetadata: yield this.getOwnAppMetadata(),\n        type: BeaconMessageType.PermissionRequest,\n        network: input && input.network ? input.network : {\n          type: NetworkType.MAINNET\n        },\n        scopes: input && input.scopes ? input.scopes : [PermissionScope.OPERATION_REQUEST, PermissionScope.SIGN]\n      };\n      const {\n        message,\n        connectionInfo\n      } = yield this.makeRequest(request).catch(requestError => __awaiter(this, void 0, void 0, function* () {\n        throw yield this.handleRequestError(request, requestError);\n      })); // TODO: Migration code. Remove sometime after 1.0.0 release.\n\n      const publicKey = message.publicKey || message.pubkey || message.pubKey;\n      const address = yield getAddressFromPublicKey(publicKey);\n      const accountInfo = {\n        accountIdentifier: yield getAccountIdentifier(address, message.network),\n        senderId: message.senderId,\n        origin: {\n          type: connectionInfo.origin,\n          id: connectionInfo.id\n        },\n        address,\n        publicKey,\n        network: message.network,\n        scopes: message.scopes,\n        threshold: message.threshold,\n        connectedAt: new Date().getTime()\n      };\n      yield this.accountManager.addAccount(accountInfo);\n      yield this.setActiveAccount(accountInfo);\n      const output = Object.assign(Object.assign({}, message), {\n        address,\n        accountInfo\n      });\n      yield this.notifySuccess(request, {\n        account: accountInfo,\n        output,\n        blockExplorer: this.blockExplorer,\n        connectionContext: connectionInfo,\n        walletInfo: yield this.getWalletInfo()\n      });\n      return output;\n    });\n  }\n  /**\n   * This method will send a \"SignPayloadRequest\" to the wallet. This method is meant to be used to sign\n   * arbitrary data (eg. a string). It will return the signature in the format of \"edsig...\"\n   *\n   * @param input The message details we need to prepare the SignPayloadRequest message.\n   */\n\n\n  requestSignPayload(input) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (!input.payload) {\n        throw yield this.sendInternalError('Payload must be provided');\n      }\n\n      const activeAccount = yield this.getActiveAccount();\n\n      if (!activeAccount) {\n        throw yield this.sendInternalError('No active account!');\n      }\n\n      const payload = input.payload;\n\n      if (typeof payload !== 'string') {\n        throw new Error('Payload must be a string');\n      }\n\n      const signingType = (() => {\n        switch (input.signingType) {\n          case SigningType.OPERATION:\n            if (!payload.startsWith('03')) {\n              throw new Error('When using signing type \"OPERATION\", the payload must start with prefix \"03\"');\n            }\n\n            return SigningType.OPERATION;\n\n          case SigningType.MICHELINE:\n            if (!payload.startsWith('05')) {\n              throw new Error('When using signing type \"MICHELINE\", the payload must start with prefix \"05\"');\n            }\n\n            return SigningType.MICHELINE;\n\n          case SigningType.RAW:\n          default:\n            return SigningType.RAW;\n        }\n      })();\n\n      const request = {\n        type: BeaconMessageType.SignPayloadRequest,\n        signingType,\n        payload,\n        sourceAddress: input.sourceAddress || activeAccount.address\n      };\n      const {\n        message,\n        connectionInfo\n      } = yield this.makeRequest(request).catch(requestError => __awaiter(this, void 0, void 0, function* () {\n        throw yield this.handleRequestError(request, requestError);\n      }));\n      yield this.notifySuccess(request, {\n        account: activeAccount,\n        output: message,\n        connectionContext: connectionInfo,\n        walletInfo: yield this.getWalletInfo()\n      });\n      return message;\n    });\n  }\n  /**\n   * This method will send an \"EncryptPayloadRequest\" to the wallet. This method is meant to be used to encrypt or decrypt\n   * arbitrary data (eg. a string). It will return the encrypted or decrypted payload\n   *\n   * @param input The message details we need to prepare the EncryptPayloadRequest message.\n   */\n  // TODO: ENCRYPTION\n  // public async requestEncryptPayload(\n  //   input: RequestEncryptPayloadInput\n  // ): Promise<EncryptPayloadResponseOutput> {\n  //   if (!input.payload) {\n  //     throw await this.sendInternalError('Payload must be provided')\n  //   }\n  //   const activeAccount: AccountInfo | undefined = await this.getActiveAccount()\n  //   if (!activeAccount) {\n  //     throw await this.sendInternalError('No active account!')\n  //   }\n  //   const payload = input.payload\n  //   if (typeof payload !== 'string') {\n  //     throw new Error('Payload must be a string')\n  //   }\n  //   if (typeof input.encryptionCryptoOperation === 'undefined') {\n  //     throw new Error('encryptionCryptoOperation must be defined')\n  //   }\n  //   if (typeof input.encryptionType === 'undefined') {\n  //     throw new Error('encryptionType must be defined')\n  //   }\n  //   const request: EncryptPayloadRequestInput = {\n  //     type: BeaconMessageType.EncryptPayloadRequest,\n  //     cryptoOperation: input.encryptionCryptoOperation,\n  //     encryptionType: input.encryptionType,\n  //     payload,\n  //     sourceAddress: input.sourceAddress || activeAccount.address\n  //   }\n  //   const { message, connectionInfo } = await this.makeRequest<\n  //     EncryptPayloadRequest,\n  //     EncryptPayloadResponse\n  //   >(request).catch(async (requestError: ErrorResponse) => {\n  //     throw await this.handleRequestError(request, requestError)\n  //   })\n  //   await this.notifySuccess(request, {\n  //     account: activeAccount,\n  //     output: message,\n  //     connectionContext: connectionInfo,\n  //     walletInfo: await this.getWalletInfo()\n  //   })\n  //   return message\n  // }\n\n  /**\n   * This method sends an OperationRequest to the wallet. This method should be used for all kinds of operations,\n   * eg. transaction or delegation. Not all properties have to be provided. Data like \"counter\" and fees will be\n   * fetched and calculated by the wallet (but they can still be provided if required).\n   *\n   * @param input The message details we need to prepare the OperationRequest message.\n   */\n\n\n  requestOperation(input) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (!input.operationDetails) {\n        throw yield this.sendInternalError('Operation details must be provided');\n      }\n\n      const activeAccount = yield this.getActiveAccount();\n\n      if (!activeAccount) {\n        throw yield this.sendInternalError('No active account!');\n      }\n\n      const request = {\n        type: BeaconMessageType.OperationRequest,\n        network: activeAccount.network || {\n          type: NetworkType.MAINNET\n        },\n        operationDetails: input.operationDetails,\n        sourceAddress: activeAccount.address || ''\n      };\n      const {\n        message,\n        connectionInfo\n      } = yield this.makeRequest(request).catch(requestError => __awaiter(this, void 0, void 0, function* () {\n        throw yield this.handleRequestError(request, requestError);\n      }));\n      yield this.notifySuccess(request, {\n        account: activeAccount,\n        output: message,\n        blockExplorer: this.blockExplorer,\n        connectionContext: connectionInfo,\n        walletInfo: yield this.getWalletInfo()\n      });\n      return message;\n    });\n  }\n  /**\n   * Sends a \"BroadcastRequest\" to the wallet. This method can be used to inject an already signed transaction\n   * to the network.\n   *\n   * @param input The message details we need to prepare the BroadcastRequest message.\n   */\n\n\n  requestBroadcast(input) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (!input.signedTransaction) {\n        throw yield this.sendInternalError('Signed transaction must be provided');\n      }\n\n      const network = input.network || {\n        type: NetworkType.MAINNET\n      };\n      const request = {\n        type: BeaconMessageType.BroadcastRequest,\n        network,\n        signedTransaction: input.signedTransaction\n      };\n      const {\n        message,\n        connectionInfo\n      } = yield this.makeRequest(request).catch(requestError => __awaiter(this, void 0, void 0, function* () {\n        throw yield this.handleRequestError(request, requestError);\n      }));\n      yield this.notifySuccess(request, {\n        network,\n        output: message,\n        blockExplorer: this.blockExplorer,\n        connectionContext: connectionInfo,\n        walletInfo: yield this.getWalletInfo()\n      });\n      return message;\n    });\n  }\n\n  setActivePeer(peer) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (this._activePeer.isSettled()) {\n        // If the promise has already been resolved we need to create a new one.\n        this._activePeer = ExposedPromise.resolve(peer);\n      } else {\n        this._activePeer.resolve(peer);\n      }\n\n      if (peer) {\n        yield this.initInternalTransports();\n\n        if (peer.type === 'postmessage-pairing-response') {\n          yield this.setTransport(this.postMessageTransport);\n        } else if (peer.type === 'p2p-pairing-response') {\n          yield this.setTransport(this.p2pTransport);\n        }\n      }\n\n      return;\n    });\n  }\n  /**\n   * A \"setter\" for when the transport needs to be changed.\n   */\n\n\n  setTransport(transport) {\n    const _super = Object.create(null, {\n      setTransport: {\n        get: () => super.setTransport\n      }\n    });\n\n    return __awaiter(this, void 0, void 0, function* () {\n      if (!transport) {\n        this._initPromise = undefined;\n      }\n\n      const result = _super.setTransport.call(this, transport);\n\n      yield this.events.emit(BeaconEvent.ACTIVE_TRANSPORT_SET, transport);\n      return result;\n    });\n  }\n  /**\n   * This method will emit an internal error message.\n   *\n   * @param errorMessage The error message to send.\n   */\n\n\n  sendInternalError(errorMessage) {\n    return __awaiter(this, void 0, void 0, function* () {\n      yield this.events.emit(BeaconEvent.INTERNAL_ERROR, {\n        text: errorMessage\n      });\n      throw new Error(errorMessage);\n    });\n  }\n  /**\n   * This method will remove all accounts associated with a specific peer.\n   *\n   * @param peersToRemove An array of peers for which accounts should be removed\n   */\n\n\n  removeAccountsForPeers(peersToRemove) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const accounts = yield this.accountManager.getAccounts();\n      const peerIdsToRemove = peersToRemove.map(peer => peer.senderId); // Remove all accounts with origin of the specified peer\n\n      const accountsToRemove = accounts.filter(account => peerIdsToRemove.includes(account.senderId));\n      const accountIdentifiersToRemove = accountsToRemove.map(accountInfo => accountInfo.accountIdentifier);\n      yield this.accountManager.removeAccounts(accountIdentifiersToRemove); // Check if one of the accounts that was removed was the active account and if yes, set it to undefined\n\n      const activeAccount = yield this.getActiveAccount();\n\n      if (activeAccount) {\n        if (accountIdentifiersToRemove.includes(activeAccount.accountIdentifier)) {\n          yield this.setActiveAccount(undefined);\n        }\n      }\n    });\n  }\n  /**\n   * This message handles errors that we receive from the wallet.\n   *\n   * @param request The request we sent\n   * @param beaconError The error we received\n   */\n\n\n  handleRequestError(request, beaconError) {\n    return __awaiter(this, void 0, void 0, function* () {\n      logger.error('handleRequestError', 'error response', beaconError);\n\n      if (beaconError.errorType) {\n        const buttons = [];\n\n        if (beaconError.errorType === BeaconErrorType.NO_PRIVATE_KEY_FOUND_ERROR) {\n          const actionCallback = () => __awaiter(this, void 0, void 0, function* () {\n            const operationRequest = request; // if the account we requested is not available, we remove it locally\n\n            let accountInfo;\n\n            if (operationRequest.sourceAddress && operationRequest.network) {\n              const accountIdentifier = yield getAccountIdentifier(operationRequest.sourceAddress, operationRequest.network);\n              accountInfo = yield this.getAccount(accountIdentifier);\n\n              if (accountInfo) {\n                yield this.removeAccount(accountInfo.accountIdentifier);\n              }\n            }\n          });\n\n          buttons.push({\n            text: 'Remove account',\n            actionCallback\n          });\n        }\n\n        const peer = yield this.getPeer();\n        const activeAccount = yield this.getActiveAccount(); // If we sent a permission request, received an error and there is no active account, we need to reset the DAppClient.\n        // This most likely means that the user rejected the first permission request after pairing a wallet, so we \"forget\" the paired wallet to allow the user to pair again.\n\n        if (request.type === BeaconMessageType.PermissionRequest && (yield this.getActiveAccount()) === undefined) {\n          this._initPromise = undefined;\n          this.postMessageTransport = undefined;\n          this.p2pTransport = undefined;\n          yield this.setTransport();\n          yield this.setActivePeer();\n        }\n\n        this.events.emit(messageEvents[request.type].error, {\n          errorResponse: beaconError,\n          walletInfo: yield this.getWalletInfo(peer, activeAccount)\n        }, buttons).catch(emitError => logger.error('handleRequestError', emitError));\n        throw BeaconError.getError(beaconError.errorType, beaconError.errorData);\n      }\n\n      throw beaconError;\n    });\n  }\n  /**\n   * This message will send an event when we receive a successful response to one of the requests we sent.\n   *\n   * @param request The request we sent\n   * @param response The response we received\n   */\n\n\n  notifySuccess(request, response) {\n    return __awaiter(this, void 0, void 0, function* () {\n      this.events.emit(messageEvents[request.type].success, response).catch(emitError => console.warn(emitError));\n    });\n  }\n\n  getWalletInfo(peer, account) {\n    var _a, _b;\n\n    return __awaiter(this, void 0, void 0, function* () {\n      const selectedAccount = account ? account : yield this.getActiveAccount();\n      const selectedPeer = peer ? peer : yield this.getPeer(selectedAccount);\n      let walletInfo;\n\n      if (selectedAccount) {\n        walletInfo = yield this.appMetadataManager.getAppMetadata(selectedAccount.senderId);\n      }\n\n      const typedPeer = selectedPeer;\n\n      if (!walletInfo) {\n        walletInfo = {\n          name: typedPeer.name,\n          icon: typedPeer.icon\n        };\n      }\n\n      const lowerCaseCompare = (str1, str2) => {\n        if (str1 && str2) {\n          return str1.toLowerCase() === str2.toLowerCase();\n        }\n\n        return false;\n      };\n\n      let selectedApp;\n      let type; // TODO: Remove once all wallets send the icon?\n\n      if (getiOSList().find(app => lowerCaseCompare(app.name, walletInfo === null || walletInfo === void 0 ? void 0 : walletInfo.name))) {\n        selectedApp = getiOSList().find(app => lowerCaseCompare(app.name, walletInfo === null || walletInfo === void 0 ? void 0 : walletInfo.name));\n        type = 'mobile';\n      } else if (getWebList().find(app => lowerCaseCompare(app.name, walletInfo === null || walletInfo === void 0 ? void 0 : walletInfo.name))) {\n        selectedApp = getWebList().find(app => lowerCaseCompare(app.name, walletInfo === null || walletInfo === void 0 ? void 0 : walletInfo.name));\n        type = 'web';\n      } else if (getDesktopList().find(app => lowerCaseCompare(app.name, walletInfo === null || walletInfo === void 0 ? void 0 : walletInfo.name))) {\n        selectedApp = getDesktopList().find(app => lowerCaseCompare(app.name, walletInfo === null || walletInfo === void 0 ? void 0 : walletInfo.name));\n        type = 'desktop';\n      } else if (getExtensionList().find(app => lowerCaseCompare(app.name, walletInfo === null || walletInfo === void 0 ? void 0 : walletInfo.name))) {\n        selectedApp = getExtensionList().find(app => lowerCaseCompare(app.name, walletInfo === null || walletInfo === void 0 ? void 0 : walletInfo.name));\n        type = 'extension';\n      }\n\n      if (selectedApp) {\n        let deeplink;\n\n        if (selectedApp.hasOwnProperty('links')) {\n          deeplink = selectedApp.links[(_a = selectedAccount === null || selectedAccount === void 0 ? void 0 : selectedAccount.network.type) !== null && _a !== void 0 ? _a : this.preferredNetwork];\n        } else if (selectedApp.hasOwnProperty('deepLink')) {\n          deeplink = selectedApp.deepLink;\n        }\n\n        return {\n          name: walletInfo.name,\n          icon: (_b = walletInfo.icon) !== null && _b !== void 0 ? _b : selectedApp.logo,\n          deeplink,\n          type\n        };\n      }\n\n      return walletInfo;\n    });\n  }\n\n  getPeer(account) {\n    var _a, _b, _c, _d;\n\n    return __awaiter(this, void 0, void 0, function* () {\n      let peer;\n\n      if (account) {\n        logger.log('getPeer', 'We have an account', account);\n        const postMessagePeers = (_b = yield (_a = this.postMessageTransport) === null || _a === void 0 ? void 0 : _a.getPeers()) !== null && _b !== void 0 ? _b : [];\n        const p2pPeers = (_d = yield (_c = this.p2pTransport) === null || _c === void 0 ? void 0 : _c.getPeers()) !== null && _d !== void 0 ? _d : [];\n        const peers = [...postMessagePeers, ...p2pPeers];\n        logger.log('getPeer', 'Found peers', peers, account);\n        peer = peers.find(peerEl => peerEl.senderId === account.senderId);\n\n        if (!peer) {\n          // We could not find an exact match for a sender, so we most likely received it over a relay\n          peer = peers.find(peerEl => peerEl.extensionId === account.origin.id);\n        }\n      } else {\n        peer = yield this._activePeer.promise;\n        logger.log('getPeer', 'Active peer', peer);\n      }\n\n      if (!peer) {\n        throw new Error('No matching peer found.');\n      }\n\n      return peer;\n    });\n  }\n  /**\n   * This method handles sending of requests to the DApp. It makes sure that the DAppClient is initialized and connected\n   * to the transport. After that rate limits and permissions will be checked, an ID is attached and the request is sent\n   * to the DApp over the transport.\n   *\n   * @param requestInput The BeaconMessage to be sent to the wallet\n   * @param account The account that the message will be sent to\n   */\n\n\n  makeRequest(requestInput) {\n    var _a;\n\n    return __awaiter(this, void 0, void 0, function* () {\n      const messageId = yield generateGUID();\n      console.time(messageId);\n      logger.log('makeRequest', 'starting');\n      yield this.init();\n      console.timeLog(messageId, 'init done');\n      logger.log('makeRequest', 'after init');\n\n      if (yield this.addRequestAndCheckIfRateLimited()) {\n        this.events.emit(BeaconEvent.LOCAL_RATE_LIMIT_REACHED).catch(emitError => console.warn(emitError));\n        throw new Error('rate limit reached');\n      }\n\n      if (!(yield this.checkPermissions(requestInput.type))) {\n        this.events.emit(BeaconEvent.NO_PERMISSIONS).catch(emitError => console.warn(emitError));\n        throw new Error('No permissions to send this request to wallet!');\n      }\n\n      if (!this.beaconId) {\n        throw yield this.sendInternalError('BeaconID not defined');\n      }\n\n      const request = Object.assign({\n        id: messageId,\n        version: '2',\n        senderId: yield getSenderId(yield this.beaconId)\n      }, requestInput);\n      const exposed = new ExposedPromise();\n      this.addOpenRequest(request.id, exposed);\n      const payload = yield new Serializer().serialize(request);\n      const account = yield this.getActiveAccount();\n      const peer = yield this.getPeer(account);\n      const walletInfo = yield this.getWalletInfo(peer, account);\n      logger.log('makeRequest', 'sending message', request);\n      console.timeLog(messageId, 'sending');\n\n      try {\n        yield (yield this.transport).send(payload, peer);\n      } catch (sendError) {\n        this.events.emit(BeaconEvent.INTERNAL_ERROR, {\n          text: 'Unable to send message. If this problem persists, please reset the connection and pair your wallet again.',\n          buttons: [{\n            text: 'Reset Connection',\n            actionCallback: () => __awaiter(this, void 0, void 0, function* () {\n              yield closeToast();\n              this.disconnect();\n            })\n          }]\n        });\n        console.timeLog(messageId, 'send error');\n        throw sendError;\n      }\n\n      console.timeLog(messageId, 'sent');\n      this.events.emit(messageEvents[requestInput.type].sent, {\n        walletInfo: Object.assign(Object.assign({}, walletInfo), {\n          name: (_a = walletInfo.name) !== null && _a !== void 0 ? _a : 'Wallet'\n        }),\n        extraInfo: {\n          resetCallback: () => __awaiter(this, void 0, void 0, function* () {\n            this.disconnect();\n          })\n        }\n      }).catch(emitError => console.warn(emitError)); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n      return exposed.promise; // TODO: fix type\n    });\n  }\n  /**\n   * This method handles sending of requests to the DApp. It makes sure that the DAppClient is initialized and connected\n   * to the transport. After that rate limits and permissions will be checked, an ID is attached and the request is sent\n   * to the DApp over the transport.\n   *\n   * @param requestInput The BeaconMessage to be sent to the wallet\n   * @param account The account that the message will be sent to\n   */\n\n\n  makeRequestV3(requestInput) {\n    var _a;\n\n    return __awaiter(this, void 0, void 0, function* () {\n      const messageId = yield generateGUID();\n      console.time(messageId);\n      logger.log('makeRequest', 'starting');\n      yield this.init();\n      console.timeLog(messageId, 'init done');\n      logger.log('makeRequest', 'after init');\n\n      if (yield this.addRequestAndCheckIfRateLimited()) {\n        this.events.emit(BeaconEvent.LOCAL_RATE_LIMIT_REACHED).catch(emitError => console.warn(emitError));\n        throw new Error('rate limit reached');\n      } // if (!(await this.checkPermissions(requestInput.type as BeaconMessageType))) {\n      //   this.events.emit(BeaconEvent.NO_PERMISSIONS).catch((emitError) => console.warn(emitError))\n      //   throw new Error('No permissions to send this request to wallet!')\n      // }\n\n\n      if (!this.beaconId) {\n        throw yield this.sendInternalError('BeaconID not defined');\n      }\n\n      const request = {\n        id: messageId,\n        version: BEACON_VERSION,\n        senderId: yield getSenderId(yield this.beaconId),\n        message: requestInput\n      };\n      const exposed = new ExposedPromise();\n      this.addOpenRequest(request.id, exposed);\n      const payload = yield new Serializer().serialize(request);\n      const account = yield this.getActiveAccount();\n      const peer = yield this.getPeer(account);\n      const walletInfo = yield this.getWalletInfo(peer, account);\n      logger.log('makeRequest', 'sending message', request);\n      console.timeLog(messageId, 'sending');\n\n      try {\n        yield (yield this.transport).send(payload, peer);\n      } catch (sendError) {\n        this.events.emit(BeaconEvent.INTERNAL_ERROR, {\n          text: 'Unable to send message. If this problem persists, please reset the connection and pair your wallet again.',\n          buttons: [{\n            text: 'Reset Connection',\n            actionCallback: () => __awaiter(this, void 0, void 0, function* () {\n              yield closeToast();\n              this.disconnect();\n            })\n          }]\n        });\n        console.timeLog(messageId, 'send error');\n        throw sendError;\n      }\n\n      console.timeLog(messageId, 'sent');\n      const index = requestInput.type;\n      this.events.emit(messageEvents[index].sent, {\n        walletInfo: Object.assign(Object.assign({}, walletInfo), {\n          name: (_a = walletInfo.name) !== null && _a !== void 0 ? _a : 'Wallet'\n        }),\n        extraInfo: {\n          resetCallback: () => __awaiter(this, void 0, void 0, function* () {\n            this.disconnect();\n          })\n        }\n      }).catch(emitError => console.warn(emitError)); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n      return exposed.promise; // TODO: fix type\n    });\n  }\n\n  disconnect() {\n    return __awaiter(this, void 0, void 0, function* () {\n      this.postMessageTransport = undefined;\n      this.p2pTransport = undefined;\n      yield Promise.all([this.clearActiveAccount(), (yield this.transport).disconnect()]);\n    });\n  }\n  /**\n   * Adds a requests to the \"openRequests\" set so we know what messages have already been answered/handled.\n   *\n   * @param id The ID of the message\n   * @param promise A promise that resolves once the response for that specific message is received\n   */\n\n\n  addOpenRequest(id, promise) {\n    logger.log('addOpenRequest', this.name, `adding request ${id} and waiting for answer`);\n    this.openRequests.set(id, promise);\n  }\n\n}","map":{"version":3,"mappings":"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","names":["BeaconEvent","TransportType","StorageKey","BeaconMessageType","PermissionScope","NetworkType","Origin","BeaconErrorType","SigningType","ColorMode","Client","BeaconError","AppMetadataManager","Serializer","LocalStorage","getAccountIdentifier","getSenderId","BEACON_VERSION","Logger","getAddressFromPublicKey","ExposedPromise","generateGUID","messageEvents","TezblockBlockExplorer","closeToast","BeaconEventHandler","DappPostMessageTransport","DappP2PTransport","PostMessageTransport","getColorMode","setColorMode","setDesktopList","setExtensionList","setWebList","setiOSList","getDesktopList","getExtensionList","getWebList","getiOSList","logger","DAppClient","constructor","config","Object","storage","Map","events","eventHandlers","disableDefaultEvents","_a","blockExplorer","_b","preferredNetwork","_c","MAINNET","colorMode","_d","LIGHT","disclaimerText","appMetadataManager","activeAccountLoaded","get","ACTIVE_ACCOUNT","then","activeAccountIdentifier","__awaiter","setActiveAccount","accountManager","getAccount","undefined","catch","storageError","console","error","handleResponse","message","connectionInfo","openRequest","openRequests","id","log","version","typedMessage","type","Acknowledge","timeLog","emit","ACKNOWLEDGE_RECEIVED","extraInfo","walletInfo","getWalletInfo","appMetadata","blockchainData","PermissionResponse","addAppMetadata","timeEnd","Error","reject","resolve","delete","Disconnect","relevantTransport","origin","P2P","p2pTransport","postMessageTransport","_e","transport","peers","getPeers","peer","find","peerEl","senderId","removePeer","removeAccountsForPeers","CHANNEL_CLOSED","errorType","_f","initInternalTransports","keyPair","name","addListener","matrixNodes","iconUrl","appUrl","init","_initPromise","Promise","_super","call","_transport","isSettled","connect","activeAccount","getActiveAccount","stopListening","stopListeningForNewPeers","EXTENSION","listenForNewPeer","PAIR_SUCCESS","emitError","warn","setActivePeer","setTransport","POST_MESSAGE","getAvailableExtensions","PAIR_INIT","p2pPeerInfo","getPairingRequestInfo","postmessagePeerInfo","abortedHandler","_activeAccount","promise","account","getPeer","set","accountIdentifier","ACTIVE_ACCOUNT_SET","clearActiveAccount","getAppMetadata","getOwnAppMetadata","showPrepare","SHOW_PREPARE","hideUI","elements","HIDE_UI","removeAccount","removeAccountResult","removeAllAccounts","sendDisconnectToPeer","removePeerResult","removeAllPeers","sendDisconnectToPeers","disconnectPromises","map","all","subscribeToEvent","internalEvent","eventCallback","on","checkPermissions","PermissionRequest","sendInternalError","permissions","scopes","OperationRequest","includes","OPERATION_REQUEST","SignPayloadRequest","SIGN","BroadcastRequest","addBlockchain","chain","blockchains","identifier","getWalletLists","walletLists","desktopList","extensionList","webList","iOSList","removeBlockchain","chainIdentifier","permissionRequest","input","blockchain","blockchainIdentifier","request","response","makeRequestV3","_requestError","partialAccountInfos","getAccountInfosFromPermissionResponse","accountInfo","accountId","address","publicKey","connectedAt","Date","getTime","chainData","addAccount","output","connectionContext","notifySuccess","network","validateRequest","BlockchainRequest","requestError","requestPermissions","makeRequest","handleRequestError","pubkey","pubKey","threshold","requestSignPayload","payload","signingType","OPERATION","startsWith","MICHELINE","RAW","sourceAddress","requestOperation","operationDetails","requestBroadcast","signedTransaction","_activePeer","result","ACTIVE_TRANSPORT_SET","errorMessage","INTERNAL_ERROR","text","peersToRemove","accounts","getAccounts","peerIdsToRemove","accountsToRemove","filter","accountIdentifiersToRemove","removeAccounts","beaconError","buttons","NO_PRIVATE_KEY_FOUND_ERROR","actionCallback","operationRequest","push","errorResponse","getError","errorData","success","selectedAccount","selectedPeer","typedPeer","icon","lowerCaseCompare","str1","str2","toLowerCase","selectedApp","app","deeplink","hasOwnProperty","links","deepLink","logo","postMessagePeers","p2pPeers","extensionId","requestInput","messageId","time","addRequestAndCheckIfRateLimited","LOCAL_RATE_LIMIT_REACHED","NO_PERMISSIONS","beaconId","exposed","addOpenRequest","serialize","send","sendError","disconnect","sent","resetCallback","index"],"sourceRoot":"","sources":["../../../src/dapp-client/DAppClient.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}