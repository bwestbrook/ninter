{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, Fragment as _Fragment } from \"vue\";\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Welcome To the Minter\", -1\n/* HOISTED */\n);\n\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = {\n  type: \"text\",\n  ref: \"txlId\",\n  placeholder: \"Enter TXL ID\"\n};\nconst _hoisted_4 = {\n  ref: \"selectedTxl\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_connectWallet = _resolveComponent(\"connectWallet\");\n\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _createElementVNode(\"h2\", null, _toDisplayString($data.title), 1\n  /* TEXT */\n  ), $data.showModal ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createVNode(_component_connectWallet, {\n    header_string: $data.header_string,\n    information: $data.information\n  }, null, 8\n  /* PROPS */\n  , [\"header_string\", \"information\"])])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"input\", _hoisted_3, null, 512\n  /* NEED_PATCH */\n  ), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.getTxlData && $options.getTxlData(...args)),\n    ref: \"getDataButton\"\n  }, \"Get Data\", 512\n  /* NEED_PATCH */\n  ), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.toggleModal && $options.toggleModal(...args)),\n    ref: \"showModalButton\"\n  }, \"SHOW\", 512\n  /* NEED_PATCH */\n  ), _createElementVNode(\"h3\", _hoisted_4, \"...\", 512\n  /* NEED_PATCH */\n  )], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;gCACEA,oBAA8B,IAA9B,EAA8B,IAA9B,EAAI,uBAAJ,EAAyB;AAAA;AAAzB;;;;;;EAKOC,IAAI,EAAC;EAAOC,GAAG,EAAC;EAAQC,WAAW,EAAC;;;EAGvCD,GAAG,EAAC;;;;;6DARRE,YACAJ,oBAAoB,IAApB,EAAoB,IAApB,EAAoBK,iBAAbC,WAAa,CAApB,EAAY;EAAA;EAAZ,GACWA,iCAAXC,oBAEM,KAFN,EAEMC,UAFN,EAEM,CADHC,aAA0EC,wBAA1E,EAA0E;IAA1DC,aAAa,EAAEL,mBAA2C;IAA3BM,WAAW,EAAEN;EAAc,CAA1E;;EAAA,mCACG,CAFN,wCAGAN,oBAA0D,OAA1D,cAA0D,IAA1D,EAA0D;EAAA;EAA1D,GACAA,oBAAiE,QAAjE,EAAiE;IAAxDa,OAAK,yCAAEC,mDAAF,CAAmD;IAArCZ,GAAG,EAAC;EAAiC,CAAjE,EAAgD,UAAhD,EAAwD;EAAA;EAAxD,GACAF,oBAAgE,QAAhE,EAAgE;IAAvDa,OAAK,yCAAEC,qDAAF,CAAkD;IAAnCZ,GAAG,EAAC;EAA+B,CAAhE,EAAmD,MAAnD,EAAuD;EAAA;EAAvD,GACAF,oBAA8B,IAA9B,cAAsB,KAAtB,EAAyB;EAAA;EAAzB","names":["_createElementVNode","type","ref","placeholder","_hoisted_1","_toDisplayString","$data","_createElementBlock","_hoisted_2","_createVNode","_component_connectWallet","header_string","information","onClick","$options"],"sourceRoot":"","sources":["/Users/benjaminwestbrook/Repositories/ninter/src/App.vue"],"sourcesContent":["<template>\n  <h1>Welcome To the Minter</h1>\n  <h2>{{ title }}</h2>\n  <div v-if=\"showModal\"> \n     <connectWallet :header_string=\"header_string\" :information=\"information\"/>\n  </div>\n  <input type=\"text\" ref=\"txlId\" placeholder=\"Enter TXL ID\">\n  <button @click=\"getTxlData\" ref=\"getDataButton\">Get Data</button> \n  <button @click=\"toggleModal\" ref=\"showModalButton\">SHOW</button> \n  <h3 ref=\"selectedTxl\">...</h3>\n</template>\n\n<script>\nimport connectWallet from \"./components/connectWallet.vue\"\n\nexport default {\n   name: 'App',\n   components: { connectWallet },\n   data () {\n     return {\n       title: \"TXL Minter be like it do\",\n       header_string: \"This be the header yo\",\n       information: \"Information will set you free\",\n       showModal: false\n\n   }\n  },\n  methods: {\n    getTxlData() {\n      console.log(this.title)\n      console.log(this.$refs.txlId)\n      this.$refs.txlId.classList.add(\"active\")\n      this.$refs.txlId.focus()\n      this.$refs.getDataButton.text = \"DO\"\n    },\n    toggleModal () {\n      this.showModal = !this.showModal\n      if (!this.showModal) {\n          this.$refs.showModalButton.innerText = \"SHOW\"\n      }\n    }\n  }\n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\nh1{\n  border-bottom: 1px solid #ddd;\n  display: inline-block;\n  padding-bottom: 10px;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}