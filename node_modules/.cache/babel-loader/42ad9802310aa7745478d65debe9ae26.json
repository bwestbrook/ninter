{"ast":null,"code":"/** PURE_IMPORTS_START _Observable,_util_isScheduler,_operators_mergeAll,_fromArray PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { isScheduler } from '../util/isScheduler';\nimport { mergeAll } from '../operators/mergeAll';\nimport { fromArray } from './fromArray';\nexport function merge() {\n  var observables = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    observables[_i] = arguments[_i];\n  }\n\n  var concurrent = Number.POSITIVE_INFINITY;\n  var scheduler = null;\n  var last = observables[observables.length - 1];\n\n  if (isScheduler(last)) {\n    scheduler = observables.pop();\n\n    if (observables.length > 1 && typeof observables[observables.length - 1] === 'number') {\n      concurrent = observables.pop();\n    }\n  } else if (typeof last === 'number') {\n    concurrent = observables.pop();\n  }\n\n  if (scheduler === null && observables.length === 1 && observables[0] instanceof Observable) {\n    return observables[0];\n  }\n\n  return mergeAll(concurrent)(fromArray(observables, scheduler));\n}","map":{"version":3,"mappings":"AAAA;AAEA,SAASA,UAAT,QAAsB,eAAtB;AACA,SAASC,WAAT,QAAyB,qBAAzB;AACA,SAASC,QAAT,QAAoB,uBAApB;AAqHA,SAAMC,SAAN,QAAqB,aAArB;OAA4B;iBAAoE,GAApE;;OAAA,mCAAoEC;;EAC/F;;EACA,IAAIC,UAAS,GAAkBC,MAAK,kBAApC;EACC,IAAIC,SAAY,OAAhB;EACA,IAAIC,kBAAiB,CAAEC,sBAAF,CAArB;;MACER,WAAS,CAAkBO,IAAlB,GAAkB;IAC3BD,SAAI,cAAkB,IAAlB,EAAJ;;QACEE,WAAU,OAAV,GAAqB,CAArB,IAAiC,OAAMA,mCAAN,KAAM;MACxCJ;IACF;SACC,WAAUG,IAAV,KAAqB,QAArB,EAAuC;IACxCH;EAED;;MACEE,SAAsB,SAAtB,IAAqCE,wBAArC,IAAqCA;IACtC;EAED;;EACD","names":["Observable","isScheduler","mergeAll","fromArray","_i","concurrent","Number","scheduler","last","observables"],"sources":["../../../src/internal/observable/merge.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}