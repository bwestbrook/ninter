{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_map,_observable_from,_innerSubscribe PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { map } from './map';\nimport { from } from '../observable/from';\nimport { SimpleOuterSubscriber, SimpleInnerSubscriber, innerSubscribe } from '../innerSubscribe';\nexport function switchMap(project, resultSelector) {\n  if (typeof resultSelector === 'function') {\n    return function (source) {\n      return source.pipe(switchMap(function (a, i) {\n        return from(project(a, i)).pipe(map(function (b, ii) {\n          return resultSelector(a, b, i, ii);\n        }));\n      }));\n    };\n  }\n\n  return function (source) {\n    return source.lift(new SwitchMapOperator(project));\n  };\n}\n\nvar SwitchMapOperator = /*@__PURE__*/function () {\n  function SwitchMapOperator(project) {\n    this.project = project;\n  }\n\n  SwitchMapOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new SwitchMapSubscriber(subscriber, this.project));\n  };\n\n  return SwitchMapOperator;\n}();\n\nvar SwitchMapSubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(SwitchMapSubscriber, _super);\n\n  function SwitchMapSubscriber(destination, project) {\n    var _this = _super.call(this, destination) || this;\n\n    _this.project = project;\n    _this.index = 0;\n    return _this;\n  }\n\n  SwitchMapSubscriber.prototype._next = function (value) {\n    var result;\n    var index = this.index++;\n\n    try {\n      result = this.project(value, index);\n    } catch (error) {\n      this.destination.error(error);\n      return;\n    }\n\n    this._innerSub(result);\n  };\n\n  SwitchMapSubscriber.prototype._innerSub = function (result) {\n    var innerSubscription = this.innerSubscription;\n\n    if (innerSubscription) {\n      innerSubscription.unsubscribe();\n    }\n\n    var innerSubscriber = new SimpleInnerSubscriber(this);\n    var destination = this.destination;\n    destination.add(innerSubscriber);\n    this.innerSubscription = innerSubscribe(result, innerSubscriber);\n\n    if (this.innerSubscription !== innerSubscriber) {\n      destination.add(this.innerSubscription);\n    }\n  };\n\n  SwitchMapSubscriber.prototype._complete = function () {\n    var innerSubscription = this.innerSubscription;\n\n    if (!innerSubscription || innerSubscription.closed) {\n      _super.prototype._complete.call(this);\n    }\n\n    this.unsubscribe();\n  };\n\n  SwitchMapSubscriber.prototype._unsubscribe = function () {\n    this.innerSubscription = undefined;\n  };\n\n  SwitchMapSubscriber.prototype.notifyComplete = function () {\n    this.innerSubscription = undefined;\n\n    if (this.isStopped) {\n      _super.prototype._complete.call(this);\n    }\n  };\n\n  SwitchMapSubscriber.prototype.notifyNext = function (innerValue) {\n    this.destination.next(innerValue);\n  };\n\n  return SwitchMapSubscriber;\n}(SimpleOuterSubscriber);","map":{"version":3,"mappings":";AAKA,OAAO,KAAKA,OAAZ,MAAoB,OAApB;AACA,SAASC,GAAT,QAAe,OAAf;AACA,SAASC,IAAT,QAAS,oBAAT;AAwEA,SAAMC,qBAAN,EACEC,qBADF,EAE+GC,cAF/G,QAE+G,mBAF/G;OAIE,SAAWC,SAAX,CAAWC,OAAX,EAA8BC,cAA9B,EAA0C;MACxC,OAAOA,cAAP,KAA6B,YAAK;IAKnC;MAAA;QAAA;UAAA;QAAA;MAAA;IAAA;EACD;;EACD;IAAA;EAAA;AAED;;IACEC,iCAA4E;WAAxDA,kBAAwDF;IAC3E;EAED;;mBACe,CAACG,UAAUC,OAAI,sBAAoBC,MAApB,EAAgC;IAC7D;EACH;;EAPA,OAOCH,iBAPD;AAcA,CAb8E;;IAatCI,6CAA2BC,MAA3B,EAA2B;EAIjEd,uCAAYc,MAAZ;;WAAAD,oBAEEE,aAAMR,SAAY;IADA,wBAAwD,IAAxD,EAAwDQ,WAAxD,KAAwD,IAAxD;;IAJZC,gBAAUT,OAAV;;IAMP;EAES;;qBACuB;IAC/B,IAAMU,MAAN;IACA,IAAIC,oBAAJ;;QACE;MACDD;IAAC,SACAE,OAAK;MACL,iBAAOA,KAAP,CAAOA,KAAP;MACD;IACD;;IACD;EAEO;;qBACA,WAAoBC,YAAK,UAAkBH,MAAlB,EAAkB;IACjD,IAAII,iBAAiB,GAAE,sBAAvB;;QACEA,mBAAkB;MACnBA;IACD;;IACA,IAAMC,eAAc,GAAI,IAAClB,qBAAD,CAA6B,IAA7B,CAAxB;IACA,eAAe,GAAC,gBAAhB;IACAW,WAAK,IAAL,CAAKO,eAAL;IAIA,KAAID,iBAAJ,GAAShB,cAAsB,SAAiBiB,eAAjB,CAA/B;;QACE,2BAAqBA,iBAAmB;MACzCP;IACF;EAES;;qBACD,mCAA0B;IACjC,IAAIM,iBAAC,GAAiB,KAAIA,iBAA1B;;QACE,sBAAMA,iBAAY;MACnBP;IACD;;IACD;EAES;;qBACH,WAAoBS,eAAU;IACpC;EAED;;qBACO,WAAoBC,iBAAU;IACnC,KAAIH,iBAAJ,GAAoBI,SAApB;;QACE;MACDX;IACF;EAED;;qBACS,CAAWJ,UAAOgB,aAAY;IACtC;EACH;;EA5DwC;CAAA","names":["tslib_1","map","from","SimpleOuterSubscriber","SimpleInnerSubscriber","innerSubscribe","switchMap","project","resultSelector","SwitchMapOperator","prototype","call","source","SwitchMapSubscriber","_super","destination","_this","result","index","error","_innerSub","innerSubscription","innerSubscriber","_unsubscribe","notifyComplete","undefined","notifyNext"],"sources":["../../../src/internal/operators/switchMap.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}