{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport axios from 'axios';\nimport { keys } from '@airgap/beacon-utils';\nconst CLIENT_API_R0 = '/_matrix/client/r0';\n/**\n * Handling the HTTP connection to the matrix synapse node\n */\n\nexport class MatrixHttpClient {\n  constructor(baseUrl) {\n    this.baseUrl = baseUrl;\n    this.cancelTokenSource = axios.CancelToken.source();\n  }\n  /**\n   * Get data from the synapse node\n   *\n   * @param endpoint\n   * @param options\n   */\n\n\n  get(endpoint, params, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return this.send('GET', endpoint, options, params);\n    });\n  }\n  /**\n   * Post data to the synapse node\n   *\n   * @param endpoint\n   * @param body\n   * @param options\n   * @param params\n   */\n\n\n  post(endpoint, body, options, params) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return this.send('POST', endpoint, options, params, body);\n    });\n  }\n  /**\n   * Put data to the synapse node\n   *\n   * @param endpoint\n   * @param body\n   * @param options\n   * @param params\n   */\n\n\n  put(endpoint, body, options, params) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return this.send('PUT', endpoint, options, params, body);\n    });\n  }\n\n  cancelAllRequests() {\n    return __awaiter(this, void 0, void 0, function* () {\n      return this.cancelTokenSource.cancel('Manually cancelled');\n    });\n  }\n  /**\n   * Send a request to the synapse node\n   *\n   * @param method\n   * @param endpoint\n   * @param config\n   * @param requestParams\n   * @param data\n   */\n\n\n  send(method, endpoint, config, requestParams, data) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const headers = config ? this.getHeaders(config) : undefined;\n      const params = requestParams ? this.getParams(requestParams) : undefined;\n      let response;\n\n      try {\n        response = yield axios.request({\n          method,\n          url: endpoint,\n          baseURL: this.apiUrl(CLIENT_API_R0),\n          headers,\n          data,\n          params,\n          cancelToken: this.cancelTokenSource.token\n        });\n      } catch (axiosError) {\n        throw axiosError.response.data;\n      }\n\n      return response.data;\n    });\n  }\n  /**\n   * Get the headers based on the options object\n   *\n   * @param options\n   */\n\n\n  getHeaders(options) {\n    const headers = {};\n    const entries = [];\n\n    if (options.accessToken) {\n      entries.push(['Authorization', `Bearer ${options.accessToken}`]);\n    }\n\n    if (entries.length === 0) {\n      return undefined;\n    }\n\n    for (const [key, value] of entries) {\n      headers[key] = value;\n    }\n\n    return headers;\n  }\n  /**\n   * Get parameters\n   *\n   * @param _params\n   */\n\n\n  getParams(_params) {\n    if (!_params) {\n      return undefined;\n    }\n\n    const params = Object.assign(_params, {});\n    keys(params).forEach(key => params[key] === undefined && delete params[key]);\n    return params;\n  }\n  /**\n   * Construct API URL\n   */\n\n\n  apiUrl(...parts) {\n    const apiBase = this.baseUrl.endsWith('/') ? this.baseUrl.substr(0, this.baseUrl.length - 1) : this.baseUrl;\n    const apiParts = parts.map(path => path.startsWith('/') ? path.substr(1) : path);\n    return [apiBase, ...apiParts].join('/');\n  }\n\n}","map":{"version":3,"mappings":"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","names":["axios","keys","CLIENT_API_R0","MatrixHttpClient","constructor","baseUrl","cancelTokenSource","CancelToken","source","get","endpoint","params","options","send","post","body","put","cancelAllRequests","cancel","method","config","requestParams","data","headers","getHeaders","undefined","getParams","response","request","url","baseURL","apiUrl","cancelToken","token","axiosError","entries","accessToken","push","length","key","value","_params","Object","assign","forEach","parts","apiBase","endsWith","substr","apiParts","map","path","startsWith","join"],"sourceRoot":"","sources":["../../../src/matrix-client/MatrixHttpClient.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}