{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nexport function count(predicate) {\n  return function (source) {\n    return source.lift(new CountOperator(predicate, source));\n  };\n}\n\nvar CountOperator = /*@__PURE__*/function () {\n  function CountOperator(predicate, source) {\n    this.predicate = predicate;\n    this.source = source;\n  }\n\n  CountOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new CountSubscriber(subscriber, this.predicate, this.source));\n  };\n\n  return CountOperator;\n}();\n\nvar CountSubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(CountSubscriber, _super);\n\n  function CountSubscriber(destination, predicate, source) {\n    var _this = _super.call(this, destination) || this;\n\n    _this.predicate = predicate;\n    _this.source = source;\n    _this.count = 0;\n    _this.index = 0;\n    return _this;\n  }\n\n  CountSubscriber.prototype._next = function (value) {\n    if (this.predicate) {\n      this._tryPredicate(value);\n    } else {\n      this.count++;\n    }\n  };\n\n  CountSubscriber.prototype._tryPredicate = function (value) {\n    var result;\n\n    try {\n      result = this.predicate(value, this.index++, this.source);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n\n    if (result) {\n      this.count++;\n    }\n  };\n\n  CountSubscriber.prototype._complete = function () {\n    this.destination.next(this.count);\n    this.destination.complete();\n  };\n\n  return CountSubscriber;\n}(Subscriber);","map":{"version":3,"mappings":";AAGA,OAAO,KAAEA,OAAT,MAAqB,OAArB;AA6DA,SAAMC,UAAN,QAAyB,eAAzB;OACE,SAAOC,KAAP,CAAQC,SAAR,EAAkC;EACnC;IAAA;EAAA;AAED;;IACEC,6BAAoB,YACsB;WADtBA,yBAAuEC;IACvE;IACnB;EAED;;eACS,WAAOC,OAAU,UAAIC,UAAJ,EAAoBF,MAApB,EAAgC;IACzD;EACH;;EARA,OAQCD,aARD;AAeA,CAdsB;;IAcWI,yCAAaC,MAAb,EAAa;EAI5CT,mCAAYS,MAAZ;;WAAAD,gBAGEE,aAAMP,WAAYE,QACnB;IAHmB,8BAAuEK,WAAvE,KAAuE,IAAvE;;IACAC;IALZA,eAAiBN,MAAjB;IACAM,cAAgB,CAAhB;;IAMP;EAES;;iBACC,WAAWC;QAClB,KAAKT;MACN;WACC;MACD;IACF;EAEO;;iBACU;IAEhB,IAAIU,MAAJ;;QACE;MACDA;IAAC,SACAC,KAAK;MACL,iBAAOC,KAAP,CAAOD,GAAP;MACD;IAED;;QACED,QAAK;MACN;IACF;EAES;;iBACH,WAAiBG,YAAY;IAClC,KAAKN,WAAL,CAAiBO,IAAjB,CAAiB,KAAUf,KAA3B;IACD;EACH;;EArCiC;CAAA","names":["tslib_1","Subscriber","count","predicate","CountOperator","source","call","subscriber","CountSubscriber","_super","destination","_this","_next","result","err","error","_complete","next"],"sources":["../../../src/internal/operators/count.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}