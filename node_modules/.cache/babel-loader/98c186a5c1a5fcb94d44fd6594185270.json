{"ast":null,"code":"import { BeaconWallet } from '@taquito/beacon-wallet';\nimport { TezosToolkit } from '@taquito/taquito';\nimport { NODE_URL } from '../constants';\nconst Tezos = new TezosToolkit(NODE_URL);\nlet globalWallet = undefined;\nexport default {\n  props: [\"header_string\", \"information\"],\n  methods: {\n    connectWallet() {\n      if (!globalWallet) {\n        // Create a new BeaconWallet instance. The options will be passed to the DAppClient constructor.\n        const wallet = new BeaconWallet({\n          name: 'TzButton'\n        }); // Setting the wallet as the wallet provider for Taquito.\n\n        Tezos.setWalletProvider(wallet);\n        globalWallet = wallet;\n\n        if (!wallet.client.getActiveAccount()) {\n          // Check if we already have an account connected, so we can skip requestPermissions.\n          return wallet;\n        } // Send permission request to the connected wallet. This will either be the browser extension, or a wallet over the P2P network.\n\n\n        wallet.requestPermissions();\n      }\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAQA,SAASA,YAAT,QAA6B,wBAA7B;AACA,SAASC,YAAT,QAA6B,kBAA7B;AACA,SAASC,QAAT,QAAyB,cAAzB;AAEA,MAAMC,KAAI,GAAI,IAAIF,YAAJ,CAAiBC,QAAjB,CAAd;AACA,IAAIE,YAAW,GAAIC,SAAnB;AAEA,eAAe;EACXC,KAAK,EAAE,CACH,eADG,EAEH,aAFG,CADI;EAKXC,OAAO,EAAE;IACTC,aAAa,GAAG;MACX,IAAI,CAACJ,YAAL,EAAmB;QAChB;QACA,MAAMK,MAAK,GAAI,IAAIT,YAAJ,CAAiB;UAAEU,IAAI,EAAE;QAAR,CAAjB,CAAf,CAFgB,CAGhB;;QACAP,KAAK,CAACQ,iBAAN,CAAwBF,MAAxB;QACAL,YAAW,GAAIK,MAAf;;QACA,IAAI,CAACA,MAAM,CAACG,MAAP,CAAcC,gBAAd,EAAL,EAAuC;UACnC;UACA,OAAOJ,MAAP;QACJ,CATgB,CAUhB;;;QACAA,MAAM,CAACK,kBAAP;MACJ;IACD;;EAfM;AALE,CAAf","names":["BeaconWallet","TezosToolkit","NODE_URL","Tezos","globalWallet","undefined","props","methods","connectWallet","wallet","name","setWalletProvider","client","getActiveAccount","requestPermissions"],"sourceRoot":"","sources":["/Users/benjaminwestbrook/Repositories/ninter/src/components/walletConnect.vue"],"sourcesContent":["<template>\n    <div ref=\"walletConnectBar\">\n        <button @click=\"connectWallet\" ref=\"connectWalletButton\">Connect Wallet</button>\n    </div>\n</template>\n\n<script>\n\nimport { BeaconWallet } from '@taquito/beacon-wallet'\nimport { TezosToolkit } from '@taquito/taquito'\nimport { NODE_URL } from '../constants'\n\nconst Tezos = new TezosToolkit(NODE_URL);\nlet globalWallet = undefined\n\nexport default {\n    props: [\n        \"header_string\",\n        \"information\"\n        ],\n    methods: {\n    connectWallet() {\n         if (!globalWallet) {\n            // Create a new BeaconWallet instance. The options will be passed to the DAppClient constructor.\n            const wallet = new BeaconWallet({ name: 'TzButton' })\n            // Setting the wallet as the wallet provider for Taquito.\n            Tezos.setWalletProvider(wallet)\n            globalWallet = wallet\n            if (!wallet.client.getActiveAccount()) {\n                // Check if we already have an account connected, so we can skip requestPermissions.\n                return wallet\n            }\n            // Send permission request to the connected wallet. This will either be the browser extension, or a wallet over the P2P network.\n            wallet.requestPermissions()\n        }\n       }\n    }\n}\n\n</script>\n\n<style scoped>\n.modal{\n    width: 400px;\n    padding: 20px;\n    margin: 100px auto;\n    border-radius: 10px;\n}\n.backdrop{\n    top: 0;\n    background: rgb(0.1, 0.1, 0.1);\n    width: 100%;\n    height: 100%;\n}\n</style>"]},"metadata":{},"sourceType":"module"}