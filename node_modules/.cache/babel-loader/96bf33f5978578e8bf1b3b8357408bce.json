{"ast":null,"code":"import { BeaconWallet } from '@taquito/beacon-wallet';\nimport { TezosToolkit } from '@taquito/taquito';\nimport { NODE_URL } from '../constants';\nconst Tezos = new TezosToolkit(NODE_URL);\nlet globalWallet = undefined; // Starts as a global undefined varible \n\nconst getBeaconInstance = async () => {\n  if (!globalWallet) {\n    // Create a new BeaconWallet instance. The options will be passed to the DAppClient constructor.\n    const wallet = new BeaconWallet({\n      name: \"txl\"\n    }); // Setting the wallet as the wallet provider for Taquito.\n\n    Tezos.setWalletProvider(wallet);\n    globalWallet = wallet;\n    console.log(wallet);\n  }\n\n  console.log(\"returning\");\n  console.log(globalWallet);\n  return globalWallet;\n};\n\nexport default {\n  props: [\"header_string\", \"information\"],\n  methods: {\n    async connectWallet() {\n      const wallet = getBeaconInstance({\n        name: \"TXL\"\n      });\n      console.log(wallet);\n      console.log(\"requesting permission\");\n      const perms = await wallet.requestPermissions();\n      console.log(perms);\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAQA,SAASA,YAAT,QAA6B,wBAA7B;AACA,SAASC,YAAT,QAA6B,kBAA7B;AACA,SAASC,QAAT,QAAyB,cAAzB;AAEA,MAAMC,KAAI,GAAI,IAAIF,YAAJ,CAAiBC,QAAjB,CAAd;AAEA,IAAIE,YAAW,GAAIC,SAAnB,C,CAA6B;;AAE7B,MAAMC,iBAAgB,GAAI,YAAY;EACpC,IAAI,CAACF,YAAL,EAAmB;IACjB;IACA,MAAMG,MAAK,GAAI,IAAIP,YAAJ,CAAiB;MAACQ,IAAI,EAAE;IAAP,CAAjB,CAAf,CAFiB,CAGjB;;IACAL,KAAK,CAACM,iBAAN,CAAwBF,MAAxB;IACAH,YAAW,GAAIG,MAAf;IACAG,OAAO,CAACC,GAAR,CAAYJ,MAAZ;EACF;;EACAG,OAAO,CAACC,GAAR,CAAY,WAAZ;EACAD,OAAO,CAACC,GAAR,CAAYP,YAAZ;EACA,OAAOA,YAAP;AACF,CAZA;;AAcA,eAAe;EACXQ,KAAK,EAAE,CACH,eADG,EAEH,aAFG,CADI;EAKXC,OAAO,EAAE;IACT,MAAMC,aAAN,GAAuB;MACf,MAAMP,MAAK,GAAID,iBAAiB,CAAC;QAACE,IAAI,EAAE;MAAP,CAAD,CAAhC;MACAE,OAAO,CAACC,GAAR,CAAYJ,MAAZ;MACAG,OAAO,CAACC,GAAR,CAAY,uBAAZ;MACA,MAAMI,KAAI,GAAI,MAAMR,MAAM,CAACS,kBAAP,EAApB;MAEAN,OAAO,CAACC,GAAR,CAAYI,KAAZ;IACJ;;EARK;AALE,CAAf","names":["BeaconWallet","TezosToolkit","NODE_URL","Tezos","globalWallet","undefined","getBeaconInstance","wallet","name","setWalletProvider","console","log","props","methods","connectWallet","perms","requestPermissions"],"sourceRoot":"","sources":["/Users/benjaminwestbrook/Repositories/ninter/src/components/walletConnect.vue"],"sourcesContent":["<template>\n    <div ref=\"walletConnectBar\">\n        <button @click=\"connectWallet\" ref=\"connectWalletButton\">Connect Wallet</button>\n    </div>\n</template>\n\n<script>\n\nimport { BeaconWallet } from '@taquito/beacon-wallet'\nimport { TezosToolkit } from '@taquito/taquito'\nimport { NODE_URL } from '../constants'\n\nconst Tezos = new TezosToolkit(NODE_URL);\n\nlet globalWallet = undefined // Starts as a global undefined varible \n\nconst getBeaconInstance = async () => {\n  if (!globalWallet) {\n    // Create a new BeaconWallet instance. The options will be passed to the DAppClient constructor.\n    const wallet = new BeaconWallet({name: \"txl\"})\n    // Setting the wallet as the wallet provider for Taquito.\n    Tezos.setWalletProvider(wallet)\n    globalWallet = wallet\n    console.log(wallet)\n  }\n  console.log(\"returning\")\n  console.log(globalWallet)\n  return globalWallet\n}\n\nexport default {\n    props: [\n        \"header_string\",\n        \"information\"\n        ],\n    methods: {\n    async connectWallet () {\n            const wallet = getBeaconInstance({name: \"TXL\"})\n            console.log(wallet)\n            console.log(\"requesting permission\")\n            const perms = await wallet.requestPermissions()\n\n            console.log(perms)\n        }  \n    }\n}\n\n</script>\n\n<style scoped>\n.modal{\n    width: 400px;\n    padding: 20px;\n    margin: 100px auto;\n    border-radius: 10px;\n}\n.backdrop{\n    top: 0;\n    background: rgb(0.1, 0.1, 0.1);\n    width: 100%;\n    height: 100%;\n}\n</style>"]},"metadata":{},"sourceType":"module"}