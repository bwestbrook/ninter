{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_Subscriber,_Subscription,_Observable,_Subject PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nexport function groupBy(keySelector, elementSelector, durationSelector, subjectSelector) {\n  return function (source) {\n    return source.lift(new GroupByOperator(keySelector, elementSelector, durationSelector, subjectSelector));\n  };\n}\n\nvar GroupByOperator = /*@__PURE__*/function () {\n  function GroupByOperator(keySelector, elementSelector, durationSelector, subjectSelector) {\n    this.keySelector = keySelector;\n    this.elementSelector = elementSelector;\n    this.durationSelector = durationSelector;\n    this.subjectSelector = subjectSelector;\n  }\n\n  GroupByOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new GroupBySubscriber(subscriber, this.keySelector, this.elementSelector, this.durationSelector, this.subjectSelector));\n  };\n\n  return GroupByOperator;\n}();\n\nvar GroupBySubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(GroupBySubscriber, _super);\n\n  function GroupBySubscriber(destination, keySelector, elementSelector, durationSelector, subjectSelector) {\n    var _this = _super.call(this, destination) || this;\n\n    _this.keySelector = keySelector;\n    _this.elementSelector = elementSelector;\n    _this.durationSelector = durationSelector;\n    _this.subjectSelector = subjectSelector;\n    _this.groups = null;\n    _this.attemptedToUnsubscribe = false;\n    _this.count = 0;\n    return _this;\n  }\n\n  GroupBySubscriber.prototype._next = function (value) {\n    var key;\n\n    try {\n      key = this.keySelector(value);\n    } catch (err) {\n      this.error(err);\n      return;\n    }\n\n    this._group(value, key);\n  };\n\n  GroupBySubscriber.prototype._group = function (value, key) {\n    var groups = this.groups;\n\n    if (!groups) {\n      groups = this.groups = new Map();\n    }\n\n    var group = groups.get(key);\n    var element;\n\n    if (this.elementSelector) {\n      try {\n        element = this.elementSelector(value);\n      } catch (err) {\n        this.error(err);\n      }\n    } else {\n      element = value;\n    }\n\n    if (!group) {\n      group = this.subjectSelector ? this.subjectSelector() : new Subject();\n      groups.set(key, group);\n      var groupedObservable = new GroupedObservable(key, group, this);\n      this.destination.next(groupedObservable);\n\n      if (this.durationSelector) {\n        var duration = void 0;\n\n        try {\n          duration = this.durationSelector(new GroupedObservable(key, group));\n        } catch (err) {\n          this.error(err);\n          return;\n        }\n\n        this.add(duration.subscribe(new GroupDurationSubscriber(key, group, this)));\n      }\n    }\n\n    if (!group.closed) {\n      group.next(element);\n    }\n  };\n\n  GroupBySubscriber.prototype._error = function (err) {\n    var groups = this.groups;\n\n    if (groups) {\n      groups.forEach(function (group, key) {\n        group.error(err);\n      });\n      groups.clear();\n    }\n\n    this.destination.error(err);\n  };\n\n  GroupBySubscriber.prototype._complete = function () {\n    var groups = this.groups;\n\n    if (groups) {\n      groups.forEach(function (group, key) {\n        group.complete();\n      });\n      groups.clear();\n    }\n\n    this.destination.complete();\n  };\n\n  GroupBySubscriber.prototype.removeGroup = function (key) {\n    this.groups.delete(key);\n  };\n\n  GroupBySubscriber.prototype.unsubscribe = function () {\n    if (!this.closed) {\n      this.attemptedToUnsubscribe = true;\n\n      if (this.count === 0) {\n        _super.prototype.unsubscribe.call(this);\n      }\n    }\n  };\n\n  return GroupBySubscriber;\n}(Subscriber);\n\nvar GroupDurationSubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(GroupDurationSubscriber, _super);\n\n  function GroupDurationSubscriber(key, group, parent) {\n    var _this = _super.call(this, group) || this;\n\n    _this.key = key;\n    _this.group = group;\n    _this.parent = parent;\n    return _this;\n  }\n\n  GroupDurationSubscriber.prototype._next = function (value) {\n    this.complete();\n  };\n\n  GroupDurationSubscriber.prototype._unsubscribe = function () {\n    var _a = this,\n        parent = _a.parent,\n        key = _a.key;\n\n    this.key = this.parent = null;\n\n    if (parent) {\n      parent.removeGroup(key);\n    }\n  };\n\n  return GroupDurationSubscriber;\n}(Subscriber);\n\nvar GroupedObservable = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(GroupedObservable, _super);\n\n  function GroupedObservable(key, groupSubject, refCountSubscription) {\n    var _this = _super.call(this) || this;\n\n    _this.key = key;\n    _this.groupSubject = groupSubject;\n    _this.refCountSubscription = refCountSubscription;\n    return _this;\n  }\n\n  GroupedObservable.prototype._subscribe = function (subscriber) {\n    var subscription = new Subscription();\n\n    var _a = this,\n        refCountSubscription = _a.refCountSubscription,\n        groupSubject = _a.groupSubject;\n\n    if (refCountSubscription && !refCountSubscription.closed) {\n      subscription.add(new InnerRefCountSubscription(refCountSubscription));\n    }\n\n    subscription.add(groupSubject.subscribe(subscriber));\n    return subscription;\n  };\n\n  return GroupedObservable;\n}(Observable);\n\nexport { GroupedObservable };\n\nvar InnerRefCountSubscription = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(InnerRefCountSubscription, _super);\n\n  function InnerRefCountSubscription(parent) {\n    var _this = _super.call(this) || this;\n\n    _this.parent = parent;\n    parent.count++;\n    return _this;\n  }\n\n  InnerRefCountSubscription.prototype.unsubscribe = function () {\n    var parent = this.parent;\n\n    if (!parent.closed && !this.closed) {\n      _super.prototype.unsubscribe.call(this);\n\n      parent.count -= 1;\n\n      if (parent.count === 0 && parent.attemptedToUnsubscribe) {\n        parent.unsubscribe();\n      }\n    }\n  };\n\n  return InnerRefCountSubscription;\n}(Subscription);","map":{"version":3,"mappings":"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","names":["tslib_1","Subscriber","Subscription","Observable","Subject","groupBy","keySelector","elementSelector","durationSelector","subjectSelector","source","GroupByOperator","call","GroupBySubscriber","_super","destination","_this","key","err","_group","groups","group","element","groupedObservable","next","duration","_error","_complete","removeGroup","unsubscribe","closed","attemptedToUnsubscribe","GroupDurationSubscriber","parent","_a","GroupedObservable","refCountSubscription","_subscribe","subscriber","groupSubject","subscription","InnerRefCountSubscription","prototype","count"],"sources":["../../../src/internal/operators/groupBy.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}