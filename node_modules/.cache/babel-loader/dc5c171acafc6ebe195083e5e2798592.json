{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport * as bs58check from 'bs58check';\n/**\n * @internalapi\n *\n * The Serializer is used to serialize / deserialize JSON objects and encode them with bs58check\n */\n\nexport class Serializer {\n  /**\n   * Serialize and bs58check encode an object\n   *\n   * @param message JSON object to serialize\n   */\n  serialize(message) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const str = JSON.stringify(message);\n      return bs58check.encode(Buffer.from(str));\n    });\n  }\n  /**\n   * Deserialize a bs58check encoded string\n   *\n   * @param encoded String to be deserialized\n   */\n\n\n  deserialize(encoded) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (typeof encoded !== 'string') {\n        throw new Error('Encoded payload needs to be a string');\n      }\n\n      return JSON.parse(bs58check.decode(encoded).toString());\n    });\n  }\n\n}","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,SAAZ,MAA2B,WAA3B;AAEA;;;;;;AAKA,OAAM,MAAOC,UAAP,CAAiB;EACrB;;;;;EAKaC,SAAS,CAACC,OAAD,EAAiB;;MACrC,MAAMC,GAAG,GAAGC,IAAI,CAACC,SAAL,CAAeH,OAAf,CAAZ;MAEA,OAAOH,SAAS,CAACO,MAAV,CAAiBC,MAAM,CAACC,IAAP,CAAYL,GAAZ,CAAjB,CAAP;IACD;EAAA;EAED;;;;;;;EAKaM,WAAW,CAACC,OAAD,EAAgB;;MACtC,IAAI,OAAOA,OAAP,KAAmB,QAAvB,EAAiC;QAC/B,MAAM,IAAIC,KAAJ,CAAU,sCAAV,CAAN;MACD;;MAED,OAAOP,IAAI,CAACQ,KAAL,CAAWb,SAAS,CAACc,MAAV,CAAiBH,OAAjB,EAA0BI,QAA1B,EAAX,CAAP;IACD;EAAA;;AAvBoB","names":["bs58check","Serializer","serialize","message","str","JSON","stringify","encode","Buffer","from","deserialize","encoded","Error","parse","decode","toString"],"sourceRoot":"","sources":["../../src/Serializer.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}