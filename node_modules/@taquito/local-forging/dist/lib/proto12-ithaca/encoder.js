"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.encodersProto12 = void 0;
const codec_1 = require("../codec");
const constants_1 = require("../constants");
const encoder_1 = require("../encoder");
const operation_1 = require("../schema/operation");
const codec_2 = require("./codec");
const schema_1 = require("./schema");
exports.encodersProto12 = Object.assign(Object.assign({}, encoder_1.encoders), { [constants_1.CODEC.INT16]: codec_1.int16Encoder, [constants_1.CODEC.BLOCK_PAYLOAD_HASH]: codec_2.blockPayloadHashEncoder });
exports.encodersProto12[constants_1.CODEC.OPERATION] = schema_1.operationEncoderProto12(exports.encodersProto12);
exports.encodersProto12[constants_1.CODEC.OP_ACTIVATE_ACCOUNT] = (val) => operation_1.schemaEncoder(exports.encodersProto12)(operation_1.ActivationSchema)(val);
exports.encodersProto12[constants_1.CODEC.OP_DELEGATION] = (val) => operation_1.schemaEncoder(exports.encodersProto12)(operation_1.DelegationSchema)(val);
exports.encodersProto12[constants_1.CODEC.OP_TRANSACTION] = (val) => operation_1.schemaEncoder(exports.encodersProto12)(operation_1.TransactionSchema)(val);
exports.encodersProto12[constants_1.CODEC.OP_ORIGINATION] = (val) => operation_1.schemaEncoder(exports.encodersProto12)(operation_1.OriginationSchema)(val);
exports.encodersProto12[constants_1.CODEC.OP_BALLOT] = (val) => operation_1.schemaEncoder(exports.encodersProto12)(operation_1.BallotSchema)(val);
exports.encodersProto12[constants_1.CODEC.OP_ENDORSEMENT] = (val) => operation_1.schemaEncoder(exports.encodersProto12)(schema_1.EndorsementSchemaProto12)(val);
exports.encodersProto12[constants_1.CODEC.OP_SEED_NONCE_REVELATION] = (val) => operation_1.schemaEncoder(exports.encodersProto12)(operation_1.SeedNonceRevelationSchema)(val);
exports.encodersProto12[constants_1.CODEC.OP_PROPOSALS] = (val) => operation_1.schemaEncoder(exports.encodersProto12)(operation_1.ProposalsSchema)(val);
exports.encodersProto12[constants_1.CODEC.OP_REVEAL] = (val) => operation_1.schemaEncoder(exports.encodersProto12)(operation_1.RevealSchema)(val);
exports.encodersProto12[constants_1.CODEC.OP_REGISTER_GLOBAL_CONSTANT] = (val) => operation_1.schemaEncoder(exports.encodersProto12)(operation_1.RegisterGlobalConstantSchema)(val);
exports.encodersProto12[constants_1.CODEC.MANAGER] = operation_1.schemaEncoder(exports.encodersProto12)(operation_1.ManagerOperationSchema);
//# sourceMappingURL=encoder.js.map