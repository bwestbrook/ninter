"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.operationDecoderProto12 = exports.operationEncoderProto12 = exports.EndorsementSchemaProto12 = void 0;
const constants_1 = require("./constants");
const utils_1 = require("@taquito/utils");
const error_1 = require("../error");
exports.EndorsementSchemaProto12 = {
    slot: 'int16',
    level: 'int32',
    round: 'int32',
    block_payload_hash: 'blockPayloadHash',
};
const operationEncoderProto12 = (encoders) => (operation) => {
    if (!(operation.kind in encoders) || !(operation.kind in constants_1.kindMappingReverseProto12)) {
        throw new utils_1.InvalidOperationKindError(operation.kind);
    }
    return constants_1.kindMappingReverseProto12[operation.kind] + encoders[operation.kind](operation);
};
exports.operationEncoderProto12 = operationEncoderProto12;
const operationDecoderProto12 = (decoders) => (value) => {
    const op = value.consume(1);
    const operationName = constants_1.kindMappingProto12[op[0]];
    if (operationName === undefined) {
        throw new error_1.UnsupportedOperationError(op[0].toString());
    }
    const decodedObj = decoders[operationName](value);
    if (typeof decodedObj !== 'object') {
        throw new error_1.OperationDecodingError('Decoded invalid operation');
    }
    return Object.assign({ kind: operationName }, decodedObj);
};
exports.operationDecoderProto12 = operationDecoderProto12;
//# sourceMappingURL=schema.js.map