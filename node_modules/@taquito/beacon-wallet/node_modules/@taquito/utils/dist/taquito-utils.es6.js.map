{"version":3,"file":"taquito-utils.es6.js","sources":["../src/constants.ts","../src/errors.ts","../src/verify-signature.ts","../src/validators.ts","../src/version.ts","../src/taquito-utils.ts"],"sourcesContent":["export enum Prefix {\n  TZ1 = 'tz1',\n  TZ2 = 'tz2',\n  TZ3 = 'tz3',\n  TZ4 = 'tz4',\n  KT = 'KT',\n  KT1 = 'KT1',\n\n  EDSK2 = 'edsk2',\n  SPSK = 'spsk',\n  P2SK = 'p2sk',\n\n  EDPK = 'edpk',\n  SPPK = 'sppk',\n  P2PK = 'p2pk',\n\n  EDESK = 'edesk',\n  SPESK = 'spesk',\n  P2ESK = 'p2esk',\n\n  EDSK = 'edsk',\n  EDSIG = 'edsig',\n  SPSIG = 'spsig',\n  P2SIG = 'p2sig',\n  SIG = 'sig',\n\n  NET = 'Net',\n  NCE = 'nce',\n  B = 'B',\n  O = 'o',\n  LO = 'Lo',\n  LLO = 'LLo',\n  P = 'P',\n  CO = 'Co',\n  ID = 'id',\n\n  EXPR = 'expr',\n  TZ = 'TZ',\n\n  VH = 'vh', // block_payload_hash\n\n  //rollups\n  TXR1 = 'txr1',\n  TXI = 'txi',\n  TXM = 'txm',\n  TXC = 'txc',\n  TXMR = 'txmr',\n  TXRL = 'txM',\n  TXW = 'txw',\n\n}\n\nexport const prefix = {\n  [Prefix.TZ1]: new Uint8Array([6, 161, 159]),\n  [Prefix.TZ2]: new Uint8Array([6, 161, 161]),\n  [Prefix.TZ3]: new Uint8Array([6, 161, 164]),\n  [Prefix.TZ4]: new Uint8Array([6, 161, 166]),\n  [Prefix.KT]: new Uint8Array([2, 90, 121]),\n  [Prefix.KT1]: new Uint8Array([2, 90, 121]),\n\n  [Prefix.EDSK]: new Uint8Array([43, 246, 78, 7]),\n  [Prefix.EDSK2]: new Uint8Array([13, 15, 58, 7]),\n  [Prefix.SPSK]: new Uint8Array([17, 162, 224, 201]),\n  [Prefix.P2SK]: new Uint8Array([16, 81, 238, 189]),\n\n  [Prefix.EDPK]: new Uint8Array([13, 15, 37, 217]),\n  [Prefix.SPPK]: new Uint8Array([3, 254, 226, 86]),\n  [Prefix.P2PK]: new Uint8Array([3, 178, 139, 127]),\n\n  [Prefix.EDESK]: new Uint8Array([7, 90, 60, 179, 41]),\n  [Prefix.SPESK]: new Uint8Array([0x09, 0xed, 0xf1, 0xae, 0x96]),\n  [Prefix.P2ESK]: new Uint8Array([0x09, 0x30, 0x39, 0x73, 0xab]),\n\n  [Prefix.EDSIG]: new Uint8Array([9, 245, 205, 134, 18]),\n  [Prefix.SPSIG]: new Uint8Array([13, 115, 101, 19, 63]),\n  [Prefix.P2SIG]: new Uint8Array([54, 240, 44, 52]),\n  [Prefix.SIG]: new Uint8Array([4, 130, 43]),\n\n  [Prefix.NET]: new Uint8Array([87, 82, 0]),\n  [Prefix.NCE]: new Uint8Array([69, 220, 169]),\n  [Prefix.B]: new Uint8Array([1, 52]),\n  [Prefix.O]: new Uint8Array([5, 116]),\n  [Prefix.LO]: new Uint8Array([133, 233]),\n  [Prefix.LLO]: new Uint8Array([29, 159, 109]),\n  [Prefix.P]: new Uint8Array([2, 170]),\n  [Prefix.CO]: new Uint8Array([79, 179]),\n  [Prefix.ID]: new Uint8Array([153, 103]),\n\n  [Prefix.EXPR]: new Uint8Array([13, 44, 64, 27]),\n  // Legacy prefix\n  [Prefix.TZ]: new Uint8Array([2, 90, 121]),\n\n  [Prefix.VH]: new Uint8Array([1, 106, 242]),\n\n  [Prefix.TXR1]: new Uint8Array([1, 128, 120, 31]),\n  [Prefix.TXI]: new Uint8Array([79, 148, 196]),\n  [Prefix.TXM]: new Uint8Array([79, 149, 30]),\n  [Prefix.TXC]: new Uint8Array([79, 148, 17]),\n  [Prefix.TXMR]: new Uint8Array([18, 7, 206, 87]),\n  [Prefix.TXRL]: new Uint8Array([79, 146, 82]),\n  [Prefix.TXW]: new Uint8Array([79, 150, 72]),\n   \n};\n\nexport const prefixLength: { [key: string]: number } = {\n  [Prefix.TZ1]: 20,\n  [Prefix.TZ2]: 20,\n  [Prefix.TZ3]: 20,\n  [Prefix.TZ4]: 20,\n  [Prefix.KT]: 20,\n  [Prefix.KT1]: 20,\n\n  [Prefix.EDPK]: 32,\n  [Prefix.SPPK]: 33,\n  [Prefix.P2PK]: 33,\n  [Prefix.EDSIG]: 64,\n  [Prefix.SPSIG]: 64,\n  [Prefix.P2SIG]: 64,\n  [Prefix.SIG]: 64,\n  [Prefix.NET]: 4,\n  [Prefix.B]: 32,\n  [Prefix.P]: 32,\n  [Prefix.O]: 32,\n  [Prefix.VH]: 32,\n  [Prefix.TXR1]: 20,\n  [Prefix.TXI]: 32,\n  [Prefix.TXM]: 32,\n  [Prefix.TXC]: 32,\n  [Prefix.TXMR]: 32,\n  [Prefix.TXRL]: 32,\n  [Prefix.TXW]: 32,\n\n};\n","/**\n *  @category Error\n *  @description Error that indicates an invalid key being passed or used\n */\nexport class InvalidKeyError extends Error {\n  public name = 'InvalidKeyError';\n  constructor(public key: string, public errorDetail?: string) {\n    super(`The key ${key} is invalid. ${errorDetail}`);\n  }\n}\n\n/**\n *  @category Error\n *  @description Error that indicates an Invalid Public Key being passed or used\n */\nexport class InvalidPublicKeyError extends Error {\n  public name = 'InvalidPublicKeyError';\n  constructor(public publicKey: string, errorDetail?: string) {\n    super(`The public key '${publicKey}' is invalid. ${errorDetail}`);\n  }\n}\n\n/**\n *  @category Error\n *  @description Error that indicates an invalid signature being passed or used\n */\nexport class InvalidSignatureError extends Error {\n  public name = 'InvalidSignatureError';\n  constructor(public signature: string, errorDetail?: string) {\n    super(`The signature '${signature}' is invalid (${errorDetail})`);\n  }\n}\n\n/**\n *  @category Error\n *  @description Error that indicates an invalid message being passed or used\n */\nexport class InvalidMessageError extends Error {\n  public name = 'InvalidMessageError';\n  constructor(public msg: string, public errorDetail?: string) {\n    super(`The message '${msg}' is invalid. ${errorDetail}`);\n  }\n}\n\n/**\n *  @category Error\n *  @description Error that indicates an invalid contract address being passed or used\n */\nexport class InvalidContractAddressError extends Error {\n  public name = 'InvalidContractAddressError';\n  constructor(public contractAddress: string) {\n    super(`The contract address '${contractAddress}' is invalid`);\n  }\n}\n\n/**\n *  @category Error\n *  @description Error that indicates an invalid address being passed or used (both contract and implicit)\n */\nexport class InvalidAddressError extends Error {\n  public name = 'InvalidAddressError';\n  constructor(public address: string) {\n    super(`The address '${address}' is invalid`);\n  }\n}\n\n/**\n *  @category Error\n *  @description Error that indicates an invalid chain id being passed or used\n */\nexport class InvalidChainIdError extends Error {\n  public name = 'InvalidChainIdError';\n  constructor(public chainId: string) {\n    super(`The chain id '${chainId}' is invalid`);\n  }\n}\n\n/**\n *  @category Error\n *  @description Error that indicates an invalid key hash being passed or used\n */\nexport class InvalidKeyHashError extends Error {\n  public name = 'InvalidKeyHashError';\n  constructor(public keyHash: string) {\n    super(`The public key hash '${keyHash}' is invalid`);\n  }\n}\n\n/**\n *  @category Error\n *  @description Error that indicates an invalid block hash being passed or used\n */ export class InvalidBlockHashError extends Error {\n  public name = 'InvalidBlockHashError';\n  constructor(public blockHash: string) {\n    super(`The block hash '${blockHash}' is invalid`);\n  }\n}\n\n/**\n *  @category Error\n *  @description Error that indicates invalid protocol hash being passed or used\n */\nexport class InvalidProtocolHashError extends Error {\n  public name = 'InvalidProtocolHashError';\n  constructor(public protocolHash: string) {\n    super(`The protocol hash '${protocolHash}' is invalid`);\n  }\n}\n\n/**\n *  @category Error\n *  @description Error that indicates an invalid operation hash being passed or used\n */ export class InvalidOperationHashError extends Error {\n  public name = 'InvalidOperationHashError';\n  constructor(public operationHash: string) {\n    super(`The operation hash '${operationHash}' is invalid`);\n  }\n}\n\n/**\n *  @category Error\n *  @description Error that indicates an invalid operation kind being passed or used\n */\nexport class InvalidOperationKindError extends Error {\n  public name = 'InvalidOperationKindError';\n  constructor(public operationKind: string) {\n    super(`The operation kind '${operationKind}' is unsupported`);\n  }\n}\n\n/**\n *  @category Error\n *  @description General error that indicates something is no longer supported and/or deprecated\n */\nexport class DeprecationError extends Error {\n  public name = 'DeprecationError';\n  constructor(public message: string) {\n    super(message);\n  }\n}\n\n/**\n *  @category Error\n *  @description General error that indicates an action is prohibited or not allowed\n */\nexport class ProhibitedActionError extends Error {\n  public name = 'ProhibitedActionError';\n  constructor(public message: string) {\n    super(message);\n  }\n}\n\n/**\n *  @category Error\n *  @description General error that indicates a failure when trying to convert data from one type to another\n */\nexport class ValueConversionError extends Error {\n  public name = 'ValueConversionError';\n  constructor(public value: string, public desiredType: string) {\n    super(`Unable to convert ${value} to a ${desiredType}`);\n  }\n}\n","import { verify } from '@stablelib/ed25519';\nimport { hash } from '@stablelib/blake2b';\nimport {\n  b58cdecode,\n  buf2hex,\n  hex2buf,\n  Prefix,\n  prefix,\n  validatePublicKey,\n  validateSignature,\n  ValidationResult,\n} from './taquito-utils';\nimport elliptic from 'elliptic';\nimport toBuffer from 'typedarray-to-buffer';\nimport { InvalidMessageError, InvalidPublicKeyError, InvalidSignatureError } from './errors';\n\ntype PkPrefix = Prefix.EDPK | Prefix.SPPK | Prefix.P2PK;\ntype SigPrefix = Prefix.EDSIG | Prefix.SPSIG | Prefix.P2SIG | Prefix.SIG;\n\n/**\n * @description Verify signature of a payload\n *\n * @param messageBytes The forged message including the magic byte (11 for block,\n *        12 for preendorsement, 13 for endorsement, 3 for generic, 5 for the PACK format of michelson)\n * @param publicKey The public key to verify the signature against\n * @param signature The signature to verify\n * @returns A boolean indicating if the signature matches\n *\n * @example\n * ```\n * const message = '03d0c10e3ed11d7c6e3357f6ef335bab9e8f2bd54d0ce20c482e241191a6e4b8ce6c01be917311d9ac46959750e405d57e268e2ed9e174a80794fbd504e12a4a000141eb3781afed2f69679ff2bbe1c5375950b0e40d00ff000000005e05050505050507070100000024747a32526773486e74516b72794670707352466261313652546656503539684b72654a4d07070100000024747a315a6672455263414c42776d4171776f6e525859565142445439426a4e6a42484a750001';\n * const pk = 'sppk7c7hkPj47yjYFEHX85q46sFJGw6RBrqoVSHwAJAT4e14KJwzoey';\n * const sig = 'spsig1cdLkp1RLgUHAp13aRFkZ6MQDPp7xCnjAExGL3MBSdMDmT6JgQSX8cufyDgJRM3sinFtiCzLbsyP6d365EHoNevxhT47nx'\n *\n * const response = verifySignature(message, pk, sig);\n * ```\n *\n */\nexport function verifySignature(\n  messageBytes: string,\n  publicKey: string,\n  signature: string\n): boolean {\n  const pkPrefix = validatePkAndExtractPrefix(publicKey);\n  const sigPrefix = validateSigAndExtractPrefix(signature);\n\n  const decodedPublicKey = b58cdecode(publicKey, prefix[pkPrefix]);\n  const decodedSig = b58cdecode(signature, prefix[sigPrefix]);\n  const bytesHash = hash(hex2buf(validateMessageNotEmpty(messageBytes)), 32);\n\n  if (pkPrefix === Prefix.EDPK) {\n    return verifyEdSignature(decodedSig, bytesHash, decodedPublicKey);\n  } else if (pkPrefix === Prefix.SPPK) {\n    return verifySpSignature(decodedSig, bytesHash, decodedPublicKey);\n  } else if (pkPrefix === Prefix.P2PK) {\n    return verifyP2Signature(decodedSig, bytesHash, decodedPublicKey);\n  } else {\n    return false;\n  }\n}\n\nfunction validateMessageNotEmpty(message: string) {\n  if (message === '') {\n    throw new InvalidMessageError(\n      message,\n      'The message provided for verifying signature cannot be empty.'\n    );\n  }\n  return message;\n}\n\nexport function validatePkAndExtractPrefix(publicKey: string): PkPrefix {\n  if (publicKey === '') {\n    throw new InvalidPublicKeyError(publicKey, 'Public key cannot be empty');\n  }\n  const pkPrefix = publicKey.substring(0, 4);\n  const validation = validatePublicKey(publicKey);\n  if (validation !== ValidationResult.VALID) {\n    if (validation === ValidationResult.INVALID_CHECKSUM) {\n      throw new InvalidPublicKeyError(publicKey, 'The public key provided has an invalid checksum');\n    } else if (validation === ValidationResult.INVALID_LENGTH) {\n      throw new InvalidPublicKeyError(publicKey, 'The public key provided has an invalid length');\n    } else if (validation === ValidationResult.NO_PREFIX_MATCHED) {\n      throw new InvalidPublicKeyError(\n        publicKey,\n        `The public key provided has an unsupported prefix: ${pkPrefix}`\n      );\n    }\n  }\n  return pkPrefix as PkPrefix;\n}\n\nfunction validateSigAndExtractPrefix(signature: string): SigPrefix {\n  const signaturePrefix = signature.startsWith('sig')\n    ? signature.substr(0, 3)\n    : signature.substr(0, 5);\n  const validation = validateSignature(signature);\n  if (validation !== ValidationResult.VALID) {\n    if (validation === ValidationResult.INVALID_CHECKSUM) {\n      throw new InvalidSignatureError(signature, `invalid checksum`);\n    } else if (validation === ValidationResult.INVALID_LENGTH) {\n      throw new InvalidSignatureError(signature, 'invalid length');\n    } else if (validation === ValidationResult.NO_PREFIX_MATCHED) {\n      throw new InvalidSignatureError(signaturePrefix, 'unsupported prefix');\n    }\n  }\n  return signaturePrefix as SigPrefix;\n}\n\nfunction verifyEdSignature(\n  decodedSig: Uint8Array,\n  bytesHash: Uint8Array,\n  decodedPublicKey: Uint8Array\n) {\n  try {\n    return verify(decodedPublicKey, bytesHash, decodedSig);\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction verifySpSignature(\n  decodedSig: Uint8Array,\n  bytesHash: Uint8Array,\n  decodedPublicKey: Uint8Array\n) {\n  const key = new elliptic.ec('secp256k1').keyFromPublic(decodedPublicKey);\n  return verifySpOrP2Sig(decodedSig, bytesHash, key);\n}\n\nfunction verifyP2Signature(\n  decodedSig: Uint8Array,\n  bytesHash: Uint8Array,\n  decodedPublicKey: Uint8Array\n) {\n  const key = new elliptic.ec('p256').keyFromPublic(decodedPublicKey);\n  return verifySpOrP2Sig(decodedSig, bytesHash, key);\n}\n\nfunction verifySpOrP2Sig(decodedSig: Uint8Array, bytesHash: Uint8Array, key: elliptic.ec.KeyPair) {\n  const hexSig = buf2hex(toBuffer(decodedSig));\n  const match = hexSig.match(/([a-f\\d]{64})/gi);\n  if (match) {\n    try {\n      const [r, s] = match;\n      return key.verify(bytesHash, { r, s });\n    } catch (e) {\n      return false;\n    }\n  }\n  return false;\n}\n","import { prefix, prefixLength, Prefix } from './constants';\n\nimport bs58check from 'bs58check';\n\nexport enum ValidationResult {\n  NO_PREFIX_MATCHED,\n  INVALID_CHECKSUM,\n  INVALID_LENGTH,\n  VALID,\n}\n\nexport function isValidPrefix(value: any): value is Prefix {\n  if (typeof value !== 'string') {\n    return false;\n  }\n\n  return value in prefix;\n}\n/**\n * @description This function is called by the validation functions ([[validateAddress]], [[validateChain]], [[validateContractAddress]], [[validateKeyHash]], [[validateSignature]], [[validatePublicKey]]).\n * Verify if the value has the right prefix or return `NO_PREFIX_MATCHED`,\n * decode the value using base58 and return `INVALID_CHECKSUM` if it fails,\n * check if the length of the value matches the prefix type or return `INVALID_LENGTH`.\n * If all checks pass, return `VALID`.\n *\n * @param value Value to validate\n * @param prefixes prefix the value should have\n */\nfunction validatePrefixedValue(value: any, prefixes: Prefix[]) {\n  const match = new RegExp(`^(${prefixes.join('|')})`).exec(value);\n  if (!match || match.length === 0) {\n    return ValidationResult.NO_PREFIX_MATCHED;\n  }\n\n  const prefixKey = match[0];\n\n  if (!isValidPrefix(prefixKey)) {\n    return ValidationResult.NO_PREFIX_MATCHED;\n  }\n\n  // Remove annotation from contract address before doing the validation\n  const contractAddress = /^(KT1\\w{33})(%(.*))?/.exec(value);\n  if (contractAddress) {\n    value = contractAddress[1];\n  }\n\n  // decodeUnsafe return undefined if decoding fail\n  let decoded = bs58check.decodeUnsafe(value);\n  if (!decoded) {\n    return ValidationResult.INVALID_CHECKSUM;\n  }\n\n  decoded = decoded.slice(prefix[prefixKey].length);\n  if (decoded.length !== prefixLength[prefixKey]) {\n    return ValidationResult.INVALID_LENGTH;\n  }\n\n  return ValidationResult.VALID;\n}\n\nconst implicitPrefix = [Prefix.TZ1, Prefix.TZ2, Prefix.TZ3,Prefix.TZ4];\nconst contractPrefix = [Prefix.KT1,Prefix.TXR1];\nconst signaturePrefix = [Prefix.EDSIG, Prefix.P2SIG, Prefix.SPSIG, Prefix.SIG];\nconst pkPrefix = [Prefix.EDPK, Prefix.SPPK, Prefix.P2PK];\nconst operationPrefix = [Prefix.O];\nconst protocolPrefix = [Prefix.P];\nconst blockPrefix = [Prefix.B]\n\n/**\n * @description Used to check if an address or a contract address is valid.\n *\n * @returns\n * 0 (NO_PREFIX_MATCHED), 1 (INVALID_CHECKSUM), 2 (INVALID_LENGTH) or 3 (VALID).\n *\n * @example\n * ```\n * import { validateAddress } from '@taquito/utils';\n * const pkh = 'tz1L9r8mWmRPndRhuvMCWESLGSVeFzQ9NAWx'\n * const validation = validateAddress(pkh)\n * console.log(validation)\n * // This example return 3 which correspond to VALID\n * ```\n */\nexport function validateAddress(value: any): ValidationResult {\n  return validatePrefixedValue(value, [...implicitPrefix, ...contractPrefix]);\n}\n\n/**\n * @description Used to check if a chain id is valid.\n *\n * @returns\n * 0 (NO_PREFIX_MATCHED), 1 (INVALID_CHECKSUM), 2 (INVALID_LENGTH) or 3 (VALID).\n *\n * @example\n * ```\n * import { validateChain } from '@taquito/utils';\n * const chainId = 'NetXdQprcVkpaWU'\n * const validation = validateChain(chainId)\n * console.log(validation)\n * // This example return 3 which correspond to VALID\n * ```\n */\nexport function validateChain(value: any): ValidationResult {\n  return validatePrefixedValue(value, [Prefix.NET]);\n}\n\n/**\n * @description Used to check if a contract address is valid.\n *\n * @returns\n * 0 (NO_PREFIX_MATCHED), 1 (INVALID_CHECKSUM), 2 (INVALID_LENGTH) or 3 (VALID).\n *\n * @example\n * ```\n * import { validateContractAddress } from '@taquito/utils';\n * const contractAddress = 'KT1JVErLYTgtY8uGGZ4mso2npTSxqVLDRVbC'\n * const validation = validateContractAddress(contractAddress)\n * console.log(validation)\n * // This example return 3 which correspond to VALID\n * ```\n */\nexport function validateContractAddress(value: any): ValidationResult {\n  return validatePrefixedValue(value, contractPrefix);\n}\n\n/**\n * @description Used to check if a key hash is valid.\n *\n * @returns\n * 0 (NO_PREFIX_MATCHED), 1 (INVALID_CHECKSUM), 2 (INVALID_LENGTH) or 3 (VALID).\n *\n * @example\n * ```\n * import { validateKeyHash } from '@taquito/utils';\n * const keyHashWithoutPrefix = '1L9r8mWmRPndRhuvMCWESLGSVeFzQ9NAWx'\n * const validation = validateKeyHash(keyHashWithoutPrefix)\n * console.log(validation)\n * // This example return 0 which correspond to NO_PREFIX_MATCHED\n * ```\n */\nexport function validateKeyHash(value: any): ValidationResult {\n  return validatePrefixedValue(value, implicitPrefix);\n}\n\n/**\n * @description Used to check if a signature is valid.\n *\n * @returns\n * 0 (NO_PREFIX_MATCHED), 1 (INVALID_CHECKSUM), 2 (INVALID_LENGTH) or 3 (VALID).\n *\n * @example\n * ```\n * import { validateSignature } from '@taquito/utils';\n * const signature = 'edsigtkpiSSschcaCt9pUVrpNPf7TTcgvgDEDD6NCEHMy8NNQJCGnMfLZzYoQj74yLjo9wx6MPVV29CvVzgi7qEcEUok3k7AuMg'\n * const validation = validateSignature(signature)\n * console.log(validation)\n * // This example return 3 which correspond to VALID\n * ```\n */\nexport function validateSignature(value: any): ValidationResult {\n  return validatePrefixedValue(value, signaturePrefix);\n}\n\n/**\n * @description Used to check if a public key is valid.\n *\n * @returns\n * 0 (NO_PREFIX_MATCHED), 1 (INVALID_CHECKSUM), 2 (INVALID_LENGTH) or 3 (VALID).\n *\n * @example\n * ```\n * import { validatePublicKey } from '@taquito/utils';\n * const publicKey = 'edpkvS5QFv7KRGfa3b87gg9DBpxSm3NpSwnjhUjNBQrRUUR66F7C9g'\n * const validation = validatePublicKey(publicKey)\n * console.log(validation)\n * // This example return 3 which correspond to VALID\n * ```\n */\nexport function validatePublicKey(value: any): ValidationResult {\n  return validatePrefixedValue(value, pkPrefix);\n}\n\n/**\n * @description Used to check if an operation hash is valid.\n *\n * @returns\n * 0 (NO_PREFIX_MATCHED), 1 (INVALID_CHECKSUM), 2 (INVALID_LENGTH) or 3 (VALID).\n *\n * @example\n * ```\n * import { validateOperation } from '@taquito/utils';\n * const operationHash = 'oo6JPEAy8VuMRGaFuMmLNFFGdJgiaKfnmT1CpHJfKP3Ye5ZahiP'\n * const validation = validateOperation(operationHash)\n * console.log(validation)\n * // This example return 3 which correspond to VALID\n * ```\n */\nexport function validateOperation(value: any): ValidationResult {\n  return validatePrefixedValue(value, operationPrefix);\n}\n\n/**\n * @description Used to check if a protocol hash is valid.\n *\n * @returns\n * 0 (NO_PREFIX_MATCHED), 1 (INVALID_CHECKSUM), 2 (INVALID_LENGTH) or 3 (VALID).\n *\n * @example\n * ```\n * import { validateProtocol } from '@taquito/utils';\n * const protocolHash = 'PtHangz2aRngywmSRGGvrcTyMbbdpWdpFKuS4uMWxg2RaH9i1qx'\n * const validation = validateProtocol(protocolHash)\n * console.log(validation)\n * // This example return 3 which correspond to VALID\n * ```\n */\nexport function validateProtocol(value: any): ValidationResult {\n  return validatePrefixedValue(value, protocolPrefix);\n}\n\n/**\n * @description Used to check if a block hash is valid.\n *\n * @returns\n * 0 (NO_PREFIX_MATCHED), 1 (INVALID_CHECKSUM), 2 (INVALID_LENGTH) or 3 (VALID).\n *\n * @example\n * ```\n * import { validateBlock } from '@taquito/utils';\n * const blockHash = 'PtHangz2aRngywmSRGGvrcTyMbbdpWdpFKuS4uMWxg2RaH9i1qx'\n * const validation = validateBlock(blockHash)\n * console.log(validation)\n * // This example return 3 which correspond to VALID\n * ```\n */\nexport function validateBlock(value: any): ValidationResult {\n  return validatePrefixedValue(value, blockPrefix);\n}\n","\n// IMPORTANT: THIS FILE IS AUTO GENERATED! DO NOT MANUALLY EDIT OR CHECKIN!\nexport const VERSION = {\n    \"commitHash\": \"cbdd0af87e400489076259d065e2d328feb8e1b4\",\n    \"version\": \"12.1.0\"\n};\n","/**\n * @packageDocumentation\n * @module @taquito/utils\n */\n\n/*\n * Some code in this file is originally from sotez and eztz\n * Copyright (c) 2018 Andrew Kishino\n * Copyright (c) 2017 Stephen Andrews\n */\n\nimport { Buffer } from 'buffer';\nimport { Prefix, prefix, prefixLength } from './constants';\nimport { validatePkAndExtractPrefix } from './verify-signature';\nimport { hash } from '@stablelib/blake2b';\nimport blake from 'blakejs';\nimport bs58check from 'bs58check';\nimport { ValueConversionError } from './errors';\n\nexport * from './validators';\nexport { VERSION } from './version';\n\nexport { prefix, Prefix, prefixLength } from './constants';\n\nexport { verifySignature, validatePkAndExtractPrefix } from './verify-signature';\nexport * from './errors';\n\n/**\n *\n * @description Hash a string using the BLAKE2b algorithm, base58 encode the hash obtained and appends the prefix 'expr' to it\n *\n * @param value Value in hex\n */\nexport function encodeExpr(value: string) {\n  const blakeHash = blake.blake2b(hex2buf(value), undefined, 32);\n  return b58cencode(blakeHash, prefix['expr']);\n}\n\n/**\n *\n * @description Return the operation hash of a signed operation\n * @param value Value in hex of a signed operation\n */\nexport function encodeOpHash(value: string) {\n  const blakeHash = blake.blake2b(hex2buf(value), undefined, 32);\n  return b58cencode(blakeHash, prefix.o);\n}\n\n/**\n *\n * @description Base58 encode a string or a Uint8Array and append a prefix to it\n *\n * @param value Value to base58 encode\n * @param prefix prefix to append to the encoded string\n */\nexport function b58cencode(value: string | Uint8Array, prefix: Uint8Array) {\n  const payloadAr = typeof value === 'string' ? Uint8Array.from(Buffer.from(value, 'hex')) : value;\n\n  const n = new Uint8Array(prefix.length + payloadAr.length);\n  n.set(prefix);\n  n.set(payloadAr, prefix.length);\n\n  return bs58check.encode(Buffer.from(n.buffer));\n}\n\n/**\n *\n * @description Base58 decode a string and remove the prefix from it\n *\n * @param value Value to base58 decode\n * @param prefix prefix to remove from the decoded string\n */\nexport const b58cdecode = (enc: string, prefixArg: Uint8Array): Uint8Array =>\n  bs58check.decode(enc).slice(prefixArg.length);\n\n/**\n *\n * @description Base58 decode a string with predefined prefix\n *\n * @param value Value to base58 decode\n */\nexport function b58decode(payload: string) {\n  const buf: Buffer = bs58check.decode(payload);\n\n  const prefixMap = {\n    [prefix.tz1.toString()]: '0000',\n    [prefix.tz2.toString()]: '0001',\n    [prefix.tz3.toString()]: '0002',\n  };\n\n  const pref = prefixMap[new Uint8Array(buf.slice(0, 3)).toString()];\n  if (pref) {\n    // tz addresses\n    const hex = buf2hex(buf.slice(3));\n    return pref + hex;\n  } else {\n    // other (kt addresses)\n    return '01' + buf2hex(buf.slice(3, 42)) + '00';\n  }\n}\n\n/**\n *\n * @description Base58 encode an address using predefined prefix\n *\n * @param value Address to base58 encode (tz1, tz2, tz3 or KT1)\n */\nexport function encodePubKey(value: string) {\n  if (value.substring(0, 2) === '00') {\n    const pref: { [key: string]: Uint8Array } = {\n      '0000': prefix.tz1,\n      '0001': prefix.tz2,\n      '0002': prefix.tz3,\n    };\n\n    return b58cencode(value.substring(4), pref[value.substring(0, 4)]);\n  }\n\n  return b58cencode(value.substring(2, 42), prefix.KT);\n}\n\n/**\n *\n * @description Base58 encode a key according to its prefix\n *\n * @param value Key to base58 encode\n */\nexport function encodeKey(value: string) {\n  if (value[0] === '0') {\n    const pref: { [key: string]: Uint8Array } = {\n      '00': new Uint8Array([13, 15, 37, 217]),\n      '01': new Uint8Array([3, 254, 226, 86]),\n      '02': new Uint8Array([3, 178, 139, 127]),\n    };\n\n    return b58cencode(value.substring(2), pref[value.substring(0, 2)]);\n  }\n}\n\n/**\n *\n * @description Base58 encode a key hash according to its prefix\n *\n * @param value Key hash to base58 encode\n */\nexport function encodeKeyHash(value: string) {\n  if (value[0] === '0') {\n    const pref: { [key: string]: Uint8Array } = {\n      '00': new Uint8Array([6, 161, 159]),\n      '01': new Uint8Array([6, 161, 161]),\n      '02': new Uint8Array([6, 161, 164]),\n    };\n\n    return b58cencode(value.substring(2), pref[value.substring(0, 2)]);\n  }\n}\n\n/**\n *\n * @description Convert an hex string to a Uint8Array\n *\n * @param hex Hex string to convert\n */\nexport const hex2buf = (hex: string): Uint8Array => {\n  const match = hex.match(/[\\da-f]{2}/gi);\n  if (match) {\n    return new Uint8Array(match.map((h) => parseInt(h, 16)));\n  } else {\n    throw new ValueConversionError(hex, 'Uint8Array');\n  }\n};\n\n/**\n *\n * @description Merge 2 buffers together\n *\n * @param b1 First buffer\n * @param b2 Second buffer\n */\nexport const mergebuf = (b1: Uint8Array, b2: Uint8Array): Uint8Array => {\n  const r = new Uint8Array(b1.length + b2.length);\n  r.set(b1);\n  r.set(b2, b1.length);\n  return r;\n};\n\n/**\n *\n * @description Flatten a michelson json representation to an array\n *\n * @param s michelson json\n */\nexport const mic2arr = function me2(s: any): any {\n  let ret: any = [];\n  if (Object.prototype.hasOwnProperty.call(s, 'prim')) {\n    if (s.prim === 'Pair') {\n      ret.push(me2(s.args[0]));\n      ret = ret.concat(me2(s.args[1]));\n    } else if (s.prim === 'Elt') {\n      ret = {\n        key: me2(s.args[0]),\n        val: me2(s.args[1]),\n      };\n    } else if (s.prim === 'True') {\n      ret = true;\n    } else if (s.prim === 'False') {\n      ret = false;\n    }\n  } else if (Array.isArray(s)) {\n    const sc = s.length;\n    for (let i = 0; i < sc; i++) {\n      const n = me2(s[i]);\n      if (typeof n.key !== 'undefined') {\n        if (Array.isArray(ret)) {\n          ret = {\n            keys: [],\n            vals: [],\n          };\n        }\n        ret.keys.push(n.key);\n        ret.vals.push(n.val);\n      } else {\n        ret.push(n);\n      }\n    }\n  } else if (Object.prototype.hasOwnProperty.call(s, 'string')) {\n    ret = s.string;\n  } else if (Object.prototype.hasOwnProperty.call(s, 'int')) {\n    ret = parseInt(s.int, 10);\n  } else {\n    ret = s;\n  }\n  return ret;\n};\n\n/**\n *\n * @description Convert a buffer to an hex string\n *\n * @param buffer Buffer to convert\n */\nexport const buf2hex = (buffer: Buffer): string => {\n  const byteArray = new Uint8Array(buffer);\n  const hexParts: string[] = [];\n  byteArray.forEach((byte: any) => {\n    const hex = byte.toString(16);\n    const paddedHex = `00${hex}`.slice(-2);\n    hexParts.push(paddedHex);\n  });\n  return hexParts.join('');\n};\n\n/**\n *\n *  @description Gets Tezos address (PKH) from Public Key\n *\n *  @param publicKey Public Key\n *  @returns A string of the Tezos address (PKH) that was derived from the given Public Key\n */\nexport const getPkhfromPk = (publicKey: string): string => {\n  let encodingPrefix;\n  let prefixLen;\n\n  const keyPrefix = validatePkAndExtractPrefix(publicKey);\n  const decoded = b58cdecode(publicKey, prefix[keyPrefix]);\n\n  switch (keyPrefix) {\n    case Prefix.EDPK:\n      encodingPrefix = prefix[Prefix.TZ1];\n      prefixLen = prefixLength[Prefix.TZ1];\n      break;\n    case Prefix.SPPK:\n      encodingPrefix = prefix[Prefix.TZ2];\n      prefixLen = prefixLength[Prefix.TZ2];\n      break;\n    case Prefix.P2PK:\n      encodingPrefix = prefix[Prefix.TZ3];\n      prefixLen = prefixLength[Prefix.TZ3];\n      break;\n  }\n\n  const hashed = hash(decoded, prefixLen);\n  const result = b58cencode(hashed, encodingPrefix);\n\n  return result;\n};\n\n/**\n *\n * @description Convert a string to bytes\n *\n * @param str String to convert\n */\nexport function char2Bytes(str: string) {\n  return Buffer.from(str, 'utf8').toString('hex');\n}\n\n/**\n *\n * @description Convert bytes to a string\n *\n * @param str Bytes to convert\n */\nexport function bytes2Char(hex: string): string {\n  return Buffer.from(hex2buf(hex)).toString('utf8');\n}\n"],"names":[],"mappings":"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"}